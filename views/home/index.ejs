<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>Knowledge Base</title>
  <style>
    /* Text Area */
    form textarea {
      width: 480px;
      transform: translatex(157px) translatey(83px);
      top: -35px;
    }

    /* Input */
    form input[type=file] {
      width: 163px !important;
    }


    #player {
      display: inline-block;
      width: 39%;
      position: relative;
      left: 13px;
    }

    @media (max-width:768px) {

      /* Player */
      #player {
        margin-right: 22px;
        width: 498px;
      }

    }

    @media (min-width:768px) {

      /* Player */
      #player {
        width: 690px;
        margin-bottom: 0px;
        top: 19px;
        left: 20px;
        margin-right: 6px;
      }

      /* Image */
      /* img{
  display:inline-block;
  transform:translatex(23px) translatey(22px);
 } */

      /* Heading */
      h1 {
        width: 84%;
        transform: translatex(23px) translatey(30px);
      }

    }

    body {
      font-family: 'Open Sans', sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f1f1f1;
    }

    header {
      background-color: #0c2461;
      color: #fff;
      padding: 20px;
      text-align: center;
    }

    main {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
      background-color: #fff;
      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    }

    h1 {
      font-size: 24px;
      margin-top: 0;
    }

    img {
      max-width: 100%;
      margin-bottom: 20px;
    }

    iframe {
      width: 100%;
      height: 400px;
      margin-bottom: 20px;
    }

    form {
      display: flex;
      flex-direction: column;
      margin-bottom: 20px;
    }

    input[type="number"] {
      padding: 10px;
      border-radius: 4px;
      border: none;
      margin-bottom: 10px;
      font-size: 16px;
      outline: none;
    }

    button[type="submit"],
    button {
      padding: 10px;
      border-radius: 4px;
      border: none;
      margin-bottom: 10px;
      font-size: 16px;
      color: #fff;
      background-color: #0c2461;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button[type="submit"]:hover,
    button:hover {
      background-color: #084174;
    }

    label {
      font-size: 16px;
      margin-bottom: 10px;
    }

    input[type="text"] {
      padding: 10px;
      border-radius: 4px;
      border: none;
      margin-bottom: 10px;
      font-size: 16px;
      outline: none;
    }

    hr {
      margin: 20px 0;
      border: none;
      border-top: 1px solid #f1f1f1;
    }

    textarea {
      border: 1px solid #ccc;
      font-size: 14px;
      font-family: "Times New Roman", Times, serif;
      padding: 10px;
      margin-bottom: 20px;
      line-height: 1.5;
      width: 100%;
      height: 400px;
    }

    textarea {
      /* Adjust the size of the text area */
      width: 25%;
      height: 200px;

      /* Add padding and border */
      padding: 10px;
      border: 1px solid #ccc;

      /* Customize the font */
      font-family: Arial, sans-serif;
      font-size: 16px;

      /* Customize the background and text color */
      background-color: #fff;
      color: #333;

      /* Add a resize handle to the bottom right corner */
      resize: both;
      overflow: auto;

      /* Add a box shadow for a 3D effect */
      box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);
    }

    /* Text Area */
    textarea {
      transform: translatex(263px) translatey(73px);
      min-height: 546px;
      height: 750px;
      width: 29%;
      position: relative;
      left: -23px;
      top: -21px;
    }

    /* Button */
    #speakerForm button {
      width: 22%;
      transform: translatex(314px) translatey(-49px);
      position: relative;
      left: 6px;
    }

    /* Speaker count */
    #speakerCount {
      width: 269px;
      border-style: solid;
      border-width: 1px;
      border-color: #a69f9f;
      transform: translatex(23px) translatey(0px);
      position: relative;
      left: 2px;
    }

    /* Speaker form */
    #speakerForm {
      transform: translatex(-15px) translatey(-307px);
      width: 38%;
      height: 54px;
      position: relative;
      top: -21px;
    }

    /* Num speakers */
    #numSpeakers {
      border-width: 1px;
      border-color: #b1aeae;
      margin-bottom: 1px;
      border-style: solid;
      width: 29px;
      position: relative;
      left: 14px;
      transform: translatex(-165px) translatey(30px);
      top: -365px;
    }

    /* Heading */
    h1 {
      font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;
      font-weight: 500;
      line-height: 1.13em;
      border-left-width: 1px;
    }

    /* Image */
    img {
      display: inline-block;
      transform: translatex(585px) translatey(-225px);
      width: 120px;
      max-width: 120px;
      border-width: 3px;
      border-color: #1abc9c;
      border-top-left-radius: 0px;
      border-top-right-radius: 0px;
      border-bottom-left-radius: 0px;
      border-bottom-right-radius: 0px;
      position: relative;
      top: 2px;
      left: -2px;
      background-color: #faf9f9;
      box-shadow: -3px 0px 3px 2px #d5d1d1;
    }

    /* Heading */
    h1:nth-child(1) {
      position: relative;
      top: 16px;
    }

    /* Create buttons button */
    #createButtonsButton {
      position: relative;
      left: 22px;
      transform: translatex(-173px) translatey(-318px);
      top: -17px;
      width: 143px;
    }

    /* Label */
    label {
      position: relative;
      left: 12px;
      top: -371px;
      width: 158px;
      margin-bottom: 2px;
    }

    /* Heading */
    h1:nth-child(7) {
      position: relative;
      top: -3px;
    }

    @media (min-width:768px) {

      /* Heading */
      h1 {
        width: 497px;
      }

      /* Player */
      #player {
        left: -113px;
        top: -340px;
        position: relative;
      }

      /* Heading */
      h1:nth-child(1) {
        width: 685px;
      }

      /* Heading */
      h1:nth-child(7) {
        width: 329px;
        transform: translatex(11px) translatey(-318px);
      }

    }

    /* Label */
    #buttons div:nth-child(1) label {
      top: -1px !important;
      bottom: auto !important;
      left: -6px;
    }

    /* Division */
    #buttons div:nth-child(1) {
      transform: translatex(4px) translatey(7px);
      display: inline-block;
    }

    /* Buttons */
    #buttons {
      transform: translatex(13px) translatey(-301px);
      position: relative;
      top: -21px;
      left: 8px;
      height: 148px;
      padding-top: 28px;
    }

    /* Division */
    #buttons>div {
      transform: translatex(0px) translatey(7px) !important;
      position: relative;
      top: -23px;
    }

    /* Label */
    #buttons div>label {
      top: -337px !important;
      bottom: auto !important;
    }

    /* Label */
    #buttons div:nth-child(3) label {
      top: 0px !important;
      bottom: auto !important;
      left: -4px;
      line-height: 22px;
    }

    /* Label */
    #buttons div>label {
      top: 0px !important;
      left: 0px !important;
    }

    /* Buttons */
    #buttons {
      min-height: 671px;
      transform: translatex(3px) translatey(-312px);
      height: 671px;
      width: 55%;
    }

    /* Division */
    #buttons div:nth-child(3) {
      top: -52px;
    }

    /* Division */
    #buttons div:nth-child(5) {
      top: -81px;
    }

    /* Division */
    #buttons div:nth-child(7) {
      top: -111px;
    }

    /* Division */
    #buttons div:nth-child(9) {
      top: -148px;
    }

    /* Textarea */
    #my-textarea {
      transform: translatex(121px) translatey(41px);
      width: 446px;
      padding-right: 0px;
    }

    /* Image */
    img {
      top: 380px;
    }

    /* Heading */
    h1 {
      top: -491px !important;
      bottom: auto !important;
    }

    /* Speaker form */
    #speakerForm {
      transform: translatex(5px) translatey(-795px);
      width: 526px;
    }

    /* Speaker count */
    #speakerCount {
      left: -15px;
    }

    /* Button */
    #speakerForm button {
      left: -9px;
    }

    /* Label */
    label {
      top: -865px;
    }

    /* Create buttons button */
    #createButtonsButton {
      top: -895px;
      transform: translatex(-173px) translatey(67px);
    }

    /* Num speakers */
    #numSpeakers {
      transform: translatex(-163px) translatey(-463px);
      top: -366px;
      left: 12px;
    }

    /* Buttons */
    #buttons {
      transform: translatex(-3px) translatey(-807px);
    }

    /* Button */
    #my-form button {
      width: 16%;
      position: relative;
      left: -385px;
      transform: translatex(487px) translatey(8px);
    }

    /* Body */
    body {
      height: 1401px;
    }

    /* Form */
    #my-form {
      transform: translatex(1060px) translatey(-387px);
      width: 563px;
      position: relative;
      left: 2px;
    }

    /* Heading */
    h1:nth-child(1) {
      top: -3px !important;
    }

    /* Player */
    #player {
      border-color: #0a0909;
      border-width: 1px;
    }

    @media (min-width:768px) {

      /* Player */
      #player {
        top: 38px;
      }

      /* Form Division */
      form {
        transform: translatex(649px) translatey(-489px);
        position: relative;
        right: -123px;
      }

      /* Speaker count */
      #speakerCount {
        transform: translatex(-828px) translatey(-357px);
        left: 67px;
        position: relative;
        top: 20px;
      }

      /* Button */
      #speakerForm button {
        transform: translatex(-452px) translatey(-389px);
      }



      /* File name */
      #fileName {
        width: 240px;
        transform: translatex(240px) translatey(48px);
      }

      /* Buttons */
      #buttons {
        transform: translatex(-3px) translatey(-783px);
        width: 647px;
        top: -38px;
      }

      /* File */
      #myFile {
        width: 28%;
        position: relative;
        left: 8px;
        transform: translatex(236px) translatey(38px);
        top: 3px;
      }

      /* Speaker form */
      #speakerForm {
        transform: translatex(649px) translatey(-489px) !important;
      }

      /* Body */
      body {
        width: 60%;
      }

      /* Form Division */
      form:nth-child(6) {
        width: 808px;
        transform: translatex(1057px) translatey(-439px);
      }

      /* Text */
      #text {
        width: 480px !important;
        padding-left: 11px;
        padding-right: 20px;
      }

      /* Heading */
      h1:nth-child(7) {
        top: -501px !important;
        bottom: auto !important;
      }

      @media (min-width:768px) {

        /* Heading */
        h1:nth-child(7) {
          transform: translatex(11px) translatey(-345px);
        }

      }
    }

    @media (min-width:768px) {



      /* File */
      #myFile {
        width: 250px;
      }

    }

    .form-card {
      width: 25rem;
      gap: 1rem;
      background-color: #ffffff;
      border-radius: 0.3rem;
      padding: 1.5rem;
    }

    /* Text */
    #text {
      background-color: #d8e6f2;
      color: #0f0f0f;
      font-style: normal;
      box-shadow: -4px 1px 9px 2px rgba(18, 17, 17, 0.1);
      border-style: solid;
      border-color: #9d9494;
    }

    /* Form Division */
    form {
      background-color: transparent;
    }

    /* File */
    #myFile {
      min-height: 24px;
      font-size: 17px;
      background-color: transparent;
    }

    /* Save */
    #saveBtn {
      width: 7%;
      position: relative;
      left: 9px;
      transform: translatex(236px) translatey(38px);
    }

    /* Save */
    #saveBtn {
      font-size: 17px;
      background-color: #0c2461;
      color: #ffffff;
      border-top-right-radius: 6px;
      border-top-left-radius: 6px;
      border-bottom-left-radius: 6px;
      border-bottom-right-radius: 6px;
      top: 2px;
    }

    /* Save */
    #saveBtn {
      width: 150px;
    }

    /* Save */
    #saveBtn {
      width: 128px;
    }



    /* Button */
    #speakerForm button {
      background-color: #0c2461;
    }

    @media (min-width:768px) {

      /* File */
      #myFile {
        top: 5px;
        width: 314px;
      }



      body {
        width: 2047px;
      }

      /* Form Division */
      form {
        width: 35% !important;
        left: 173px !important;
      }

      /* Form Division */
      form:nth-child(6) {
        left: 158px;
        width: 38% !important;
      }

      /* Text */
      #text {
        left: -142px;
      }

      /* Form Division */
      form:nth-child(7) {
        left: 177px !important;
      }

      /* Heading */
      h1 {
        left: 28px;
        top: -2px !important;
        bottom: auto !important;
        margin-bottom: 10px;
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(-126px) translatey(-901px);
        left: 29px;
      }

      /* Label */
      label {
        display: inline-block;
        height: 46px;
        transform: translatex(35px) translatey(-976px);
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(-122px) translatey(-1426px);
        left: 7px;
        top: -370px;
      }

      /* Image */
      img {
        left: 31px;
      }

      /* Label */
      #buttons div:nth-child(3) label {
        transform: translatex(-4px) translatey(-20px);
        left: 11px !important;
        right: auto !important;
        top: 11px !important;
        bottom: auto !important;
      }

      /* Label */
      #buttons div:nth-child(1) label {
        transform: translatex(12px) translatey(-11px);
      }

      /* Heading */
      h1:nth-child(8) {
        min-height: 36px;
        height: 36px;
      }

      @media (min-width:768px) {

        /* Form Division */
        form {
          right: auto !important;
        }

        /* Form Division */
        form:nth-child(6) {
          transform: translatex(1299px) translatey(-394px);
        }

        /* Form Division */
        form:nth-child(7) {
          transform: translatex(579px) translatey(-1299px);
          right: auto !important;
        }

        /* Speaker count */
        #speakerCount {
          transform: translatex(-842px) translatey(-1303px);
        }

        /* Button */
        #speakerForm button {
          transform: translatex(-452px) translatey(-1331px);
        }

        /* Player */
        #player {
          left: -77px;
        }

        /* Buttons */
        #buttons {
          transform: translatex(39px) translatey(-1761px);
          top: -41px;
        }

        /* Heading */
        h1:nth-child(8) {
          transform: translatex(47px) translatey(-1777px);
          width: 324px;
        }

        /* Body */
        body {
          width: 2122px;
        }

      }
    }

    @media (min-width:768px) {

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(27px) translatey(-934px);
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(36px) translatey(-1462px);
      }

      /* Form Division */
      form {
        transform: translatex(675px) translatey(-830px) !important;
      }

      /* Form Division */
      form:nth-child(7) {
        transform: translatex(1403px) translatey(-400px) !important;
      }

      /* Form Division */
      form:nth-child(9) {
        transform: translatex(623px) translatey(-1385px) !important;
      }

    }

    /* Text */
    #text {
      background-color: #ccdeef;
    }

    /* Form Division */
    form {
      top: -8px !important;
    }

    /* Form Division */
    form:nth-child(7) {
      top: -36px !important;
      bottom: auto !important;
    }

    /* Input */
    form input {
      width: 22% !important;
      transform: translatex(134px) translatey(39px) !important;
      font-size: 17px !important;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      background-color: #0f355b;
      color: #f9f9f9;
    }

    /* Speaker count */
    #speakerCount {
      display: none;
    }

    /* Button */
    #speakerForm button {
      display: none;
    }

    @media (min-width:768px) {

      /* File */
      #myFile {
        transform: translatex(4px) translatey(39px);
        left: 11px;
        width: 43% !important;
      }

      /* File name */
      #fileName {
        transform: translatex(4px) translatey(39px);
      }

      /* Buttons */
      #buttons {
        transform: translatex(32px) translatey(-1883px);
      }

      /* Speaker count */
      #speakerCount {
        transform: translatex(-835px) translatey(-1313px) !important;
      }

      /* Button */
      #speakerForm button {
        transform: translatex(-835px) translatey(-1313px);
      }

      /* Heading */
      h1 {
        position: relative;
        top: 10px !important;
        bottom: auto !important;
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(33px) translatey(-1045px);
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(40px) translatey(-1572px);
      }

    }

    /* Heading */
    h1 {
      padding-bottom: 15px;
      height: 26px;
    }

    /* Buttons */
    #buttons {
      left: 55px;
    }

    /* Form Division */
    form {
      top: -18px !important;
      bottom: auto !important;
    }

    @media (min-width:768px) {

      body {
        width: 2347px;
      }

      /* Form Division */
      form {
        transform: translatex(612px) translatey(-384px) !important;
        width: 892px !important;
      }

      /* Form Division */
      form:nth-child(8) {
        left: 168px !important;
        right: auto !important;
        transform: translatex(1155px) translatey(-1348px) !important;
      }

      /* Heading */
      h1 {
        top: -200px !important;
        transform: translatex(16px) translatey(-1651px) !important;
        bottom: auto !important;
      }

    }

    #Qbtn,
    #Abtn {
      position: fixed;
      bottom: 10px;
      right: 10px;
      display: none;
    }

    .tag-btn {
      position: absolute;
      display: none;
    }

    /* Qbtn */

    /* Abtn */
    #Abtn {
      height: 50px;
      width: 80px;
      transform: translatex(-531px) translatey(14px);
    }

    /* Qbtn */
    #Qbtn {
      top: 23px !important;
      bottom: auto !important;

      left: -1px !important;
      right: auto !important;
      height: 50px;
      transform: translatex(1319px) translatey(134px);
      width: 80px;



    }

    /* Abtn */
    #Abtn {
      top: 1000px !important;
      bottom: -158px;
      left: -101px !important;
      right: -173px;
      max-width: 24px;
      min-width: 99px;
      transform: translatex(1419px) translatey(-790px);
      width: 931px;
    }

    .tag {
      font-size: 0.8em;
      font-weight: bold;
    }

    /* Tag */
    textarea#text .tag {
      position: relative;
      top: -6px;
    }

    #editor {
      height: 200px;
      width: 500px;
      border: 1px solid black;
      padding: 10px;
    }

    /* Tag btn2 */
    .tag-btn2 {
      transform: translatex(1208px) translatey(-3116px);
      position: relative;
      top: -45px !important;
      bottom: auto !important;
      min-width: 66px;
      width: 66px !important;
      min-height: 56px;
    }

    /* Tag btn2 */
    .tag-btn2:nth-child(18) {
      transform: translatex(1266px) translatey(-3077px);
      top: 4px;
    }

    /* Tag btn2 */
    .tag-btn2:nth-child(19) {
      transform: translatex(1201px) translatey(-3023px);
      left: -5px;
      top: -40px !important;
      bottom: auto !important;
    }

    /* Abtn */
    #Abtn {
      width: 99px;
      max-width: 69px;
      min-width: 80px;
    }

    /* Select location */
    #selectLocation {
      position: relative;
      padding-bottom: 3px;
      left: -600px;
      top: -2230px;
      width: 118px !important;
      /* transform:translatex(-605px) translatey(-459px); */
      /* transform:translatex(-298px) translatey(-463px); */
      transform: translatex(-317px) translatey(-466px);


    }

    /* Hrdware */
    /* #Hrdware-btn{
 transform:translatex(-541px) translatey(-2695px);
} */

    /* Area */
    /* #Area-btn{
 position:relative;
 transform:translatex(-387px) translatey(-1793px);
 left:-31px;
 top:-994px;
} */

    /* Evnt */
    /* #Evnt-btn{ */
    /* position:relative; */
    /* top:-1900px; */
    /* left:416px; */
    /* transform:translatex(-344px) translatey(-843px); */
    /* transform:translatex(-743px) translatey(-1575px);
 position:relative;
 top:-1166px;
 width:100px;
} */

    /* Evnt input */
    /* #Evnt-input{
 transform:translatex(-771px) translatey(-2745px);
 width:98px;
 position:relative;
 left:-23px;
 top:5px;
} */

    /* Area input */
    /* #Area-input{
 transform:translatex(-888px) translatey(-2786px);
 width:98px;
 position:relative;
 left:-27px;
} */

    /* Hrdware input */
    /* #Hrdware-input{
 transform:translatex(-1031px) translatey(3px);
 position:relative;
 top:-2697px;
 width:98px;
 left:-9px;
} */
    .form-container {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .form-input {
      display: flex;
      flex-direction: column;
      margin: 10px;
    }

    .form-input label {
      font-size: 14px;
      font-weight: bold;
      margin-bottom: 5px;
    }

    .form-input input[type="text"] {
      width: 200px;
      height: 30px;
      border-radius: 5px;
      border: 1px solid #ccc;
      padding: 5px;
      font-size: 14px;
    }

    .form-select {
      margin: 10px;
    }

    .form-select label {
      font-size: 14px;
      font-weight: bold;
      margin-right: 10px;
    }

    .form-select select {
      width: 100px;
      height: 30px;
      border-radius: 5px;
      border: 1px solid #ccc;
      font-size: 14px;
    }

    .form-submit {
      margin: 10px;
    }

    .form-submit input[type="submit"] {
      width: 100px;
      height: 30px;
      background-color: #4CAF50;
      color: #fff;
      border-radius: 5px;
      border: none;
      cursor: pointer;
      font-size: 14px;
    }

    .form-submit input[type="submit"]:hover {
      background-color: #5d765e;
    }

    .form-label {
      margin-bottom: 5px;
    }

    /* Select location */
    #selectLocation {
      top: 5px;
      left: -328px;
      transform: translatex(462px) translatey(-33px);
      width: 134px !important;
      height: 40px !important;
      border-style: solid !important;
      border-width: 1px !important;
    }

    /* Form */
    #myForm {
      height: 190px;
      padding-left: 24px;
      top: -1991px !important;
      bottom: auto !important;
      border-width: 1px;
      border-style: solid;
      border-color: #8d8181;
      box-shadow: 6px 1px 0px -5px #a29e9e;
      background-color: #d8e2e8;
    }

    /* Button */
    #myForm button {
      width: 22%;
      transform: translatex(258px) translatey(-262px);
      height: 39px !important;
      min-height: 110px;
      box-shadow: 0px 0px 1px 1px #070707;
      position: relative;
      left: 15px;
    }

    /* Label */
    #myForm label {
      left: 34px !important;
      width: 129px;
      top: -878px !important;
      min-height: 28px;
      padding-left: 1px;
    }

    /* Event input */
    #Event-input {
      position: relative;
      top: -17px;
      transform: translatex(143px) translatey(-40px) !important;
      width: 104px !important;
      left: -7px;
      border-style: dotted;
      border-width: 1px;
    }

    /* Hardware input */
    #Hardware-input {
      position: relative;
      top: -1px;
      left: 4px;
      transform: translatex(131px) translatey(-129px) !important;
      width: 104px !important;
      border-style: dotted;
      border-width: 1px;
    }

    /* Label */
    #myForm label:nth-child(3) {
      left: 30px !important;
      right: auto !important;
      top: -877px !important;
      bottom: auto !important;
    }

    /* Area input */
    #Area-input {
      transform: translatex(132px) translatey(-103px) !important;
      position: relative;
      left: 4px;
      width: 104px !important;
      top: 9px;
      border-style: dotted;
      border-width: 1px;
    }

    /* Label */
    #myForm label:nth-child(1) {
      top: -876px !important;
      left: 49px;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(7) {
      left: 27px !important;
      right: auto !important;
      top: -889px !important;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(5) {
      left: 32px !important;
      right: auto !important;
      top: -872px !important;
      bottom: auto !important;
    }

    /* Text */
    #text {
      height: 576px;
      top: -7px;
      transform: translatex(157px) translatey(7px) !important;
    }

    /* Create buttons button */
    #createButtonsButton {
      top: -893px;
    }

    /* Form Division */
    form {
      top: 19px !important;
      bottom: auto !important;
    }

    /* Form Division */
    form:nth-child(6) {
      top: 6px !important;
      bottom: auto !important;
      height: 770px;
    }

    /* File name */
    #fileName {
      position: relative;
      left: -116px;
      top: -45px;
      border-style: dotted;
      border-width: 1px;
    }

    /* Save */
    #saveBtn {
      left: -12px;
      transform: translatex(32px) translatey(4px) !important;
      width: 150px !important;
      top: -16px;
    }

    /* Text Area */
    form:nth-child(8) textarea {
      left: -65px;
      min-height: 524px;
      height: 639px;
    }

    /* Tag btn2 */
    .tag-btn2 {
      top: -39px !important;
      bottom: auto !important;
      transform: translatex(1224px) translatey(-2896px) !important;
      left: -21px;
    }

    /* Text Area */
    form textarea {
      min-height: 626px !important;
      transform: translatex(118px) translatey(115px) !important;
    }

    /* Qbtn */
    #Qbtn {
      width: 59px;
      left: -14px !important;
      right: auto !important;
      top: -3px !important;
      bottom: auto !important;
      transform: translatex(1323px) translatey(111px);
    }

    /* Abtn */
    #Abtn {
      width: 59px !important;
      max-width: 80px;
      min-width: 59px;
      left: -117px !important;
      right: auto !important;
      transform: translatex(1427px) translatey(-826px);
      top: 995px !important;
      bottom: auto !important;
    }

    /* Tag btn2 */
    .tag-btn2:nth-child(18) {
      width: 59px !important;
      min-width: 53px;
      left: -39px;
    }

    /* Tag btn2 */
    .tag-btn2:nth-child(19) {
      min-width: 52px;
      width: 59px !important;
      transform: translatex(1153px) translatey(-2829px) !important;
      top: -45px !important;
      bottom: auto !important;
      left: -31px;
    }

    /* Input */
    form:nth-child(8) input:nth-child(3) {
      position: relative;
      left: -7px;
      transform: translatex(63px) translatey(56px) !important;
      top: 4px;
    }

    /* Input */
    form:nth-child(8) input[type=file] {
      position: relative;
      top: 27px;
      left: -76px;
      width: 307px !important;
      max-width: 302px;
    }

    /* Input */
    form:nth-child(8) input[type=text] {
      position: relative;
      top: 26px;
      transform: translatex(56px) translatey(40px) !important;
      border-width: 1px;
      border-style: dotted;
    }

    /* Input */
    form input[type=text] {
      border-style: solid;
      border-width: 0px;
    }

    /* Input */
    form input[type=file] {
      width: 160px !important;
      max-width: 242px;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        width: 370px !important;
        left: 136px !important;
        right: auto !important;
        transform: translatex(644px) translatey(-228px) !important;
      }

      /* Label */
      #myForm label {
        transform: translatex(-38px) translatey(823px);
        height: 26px !important;
      }

      /* Label */
      #myForm label:nth-child(5) {
        transform: translatex(-40px) translatey(862px);
      }

      /* Label */
      #myForm label:nth-child(3) {
        transform: translatex(-38px) translatey(903px);
      }

      /* Label */
      #myForm label:nth-child(7) {
        transform: translatex(-34px) translatey(705px);
      }

      /* Buttons */
      #buttons {
        top: 40px;
        transform: translatex(-20px) translatey(-1769px);
      }

      /* Heading */
      h1 {
        top: 5px !important;
        bottom: auto !important;
      }

      /* Num speakers */
      #numSpeakers {
        top: -356px;
        transform: translatex(37px) translatey(-1393px);
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(22px) translatey(-855px);
      }

      /* Form Division */
      form {
        width: 743px !important;
        transform: translatex(346px) translatey(86px) !important;
      }

      /* Form Division */
      form:nth-child(6) {
        width: 583px !important;
        transform: translatex(602px) translatey(-409px) !important;
      }

      /* File */
      #myFile {
        left: -113px;
        top: -46px;
      }

      /* File name */
      #fileName {
        width: 150px !important;
      }

      /* Label */
      #myForm label:nth-child(1) {
        transform: translatex(-44px) translatey(890px);
      }

    }

    /* Label */
    #myForm label:nth-child(5) {
      left: 36px !important;
      right: auto !important;
    }

    /* Label */
    #myForm label:nth-child(7) {
      left: 30px !important;
      right: auto !important;
    }

    /* Label */
    #myForm label:nth-child(3) {
      top: -873px !important;
      bottom: auto !important;
    }

    @media (min-width:768px) {

      /* Label */
      #myForm label:nth-child(7) {
        transform: translatex(-42px) translatey(799px);
      }

      /* Label */
      #myForm label:nth-child(3) {
        transform: translatex(-40px) translatey(855px);
      }

      /* Label */
      #myForm label:nth-child(5) {
        transform: translatex(-47px) translatey(819px);
      }

    }

    .stream-deck {
      display: grid;
      grid-template-columns: repeat(6, 1fr);
      grid-template-rows: repeat(2, 1fr);
      gap: 10px;
      width: 400px;
      height: 200px;
      background-color: #333;
      border-radius: 10px;
      padding: 10px;
    }

    .stream-deck__key {
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 30px;
      font-weight: bold;
      background-color: #444;
      color: #fff;
      border-radius: 5px;
      cursor: pointer;
    }

    .stream-deck__key:hover {
      background-color: #555;
    }

    .stream-deck__key--1 {
      grid-column: 1 / span 2;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--2 {
      grid-column: 3 / span 2;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--3 {
      grid-column: 5 / span 2;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--4 {
      grid-column: 1 / span 2;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--5 {
      grid-column: 3 / span 2;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--6 {
      grid-column: 5 / span 2;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--7 {
      grid-column: 1 / span 1;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--8 {
      grid-column: 6 / span 1;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--9 {
      grid-column: 1 / span 1;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--10 {
      grid-column: 6 / span 1;
      grid-row: 2 / span 1;
    }

    .stream-deck__key--11 {
      grid-column: 2 / span 1;
      grid-row: 1 / span 1;
    }

    .stream-deck__key--12 {
      grid-column: 5 / span 1;
      grid-row: 1 / span 1;
    }

    .stream-deck__key__label {
      margin: auto;
    }


    /* Stream deck */
    .stream-deck {
      transform: translatex(101px) translatey(47px);
      min-height: 246px;
      width: 559px;
      position: relative;
      left: -9px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(7) {
      width: 49px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(11) {
      width: 61px;
      transform: translatex(23px) translatey(0px);
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(1) {
      width: 58px;
      transform: translatex(45px) translatey(3px);
      position: relative;
      left: 10px;
      top: -2px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(2) {
      transform: translatex(0px) translatey(0px);
      width: 82px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(9) {
      transform: translatex(0px) translatey(0px);
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(4) {
      width: 88px;
      transform: translatex(92px) translatey(0px);
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(3) {
      transform: translatex(-98px) translatey(4px);
      width: 89px;
      position: relative;
      top: -4px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(10) {
      transform: translatex(3px) translatey(-4px);
      position: relative;
      top: 4px;
      left: -4px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(6) {
      width: 83px;
    }

    /* Form */
    #myForm {
      top: -2051px !important;
      bottom: auto !important;
      border-top-left-radius: 10px;
      border-bottom-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-top-right-radius: 10px;
      background-color: #313639;
      color: #fcfcfc;
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(1323px) translatey(-2212.5px);
      top: -3px;
    }

    /* Button */
    #myForm button:hover {
      background-color: #595959 !important;
      border-color: #ffffff;
      box-shadow: 0px 0px 1px 1px #7a7a7a;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        transform: translatex(667px) translatey(-440px) !important;
        left: 131px !important;
        right: auto !important;
      }

    }

    /* Button */
    #myForm button {
      background-color: #444444 !important;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key {
      background-color: #444444;
    }


    .play-button {
      background-color: #4CAF50;
    }

    .pause-button {
      background-color: #f44336;
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-214px) translatey(-2565px);
      position: relative;
      top: 6px;
    }

    /* Play button */
    #play-button {
      transform: translatex(-220px) translatey(-2566px);
      position: relative;
      top: 6px;
    }

    /* #player {
  pointer-events: none;
} */
    /* Control button */
    #controlButton {
      transform: translatex(-458px) translatey(-2561px);
      position: relative;
      top: 2px;
      left: -4px;
    }

    /* Message input */
    #messageInput {
      transform: translatex(790px) translatey(-1274px);
      width: 446px;
      min-height: 18px;
      height: 18px;
      min-width: 29px;
    }

    /* Button */
    button:nth-child(10) {
      transform: translatex(796px) translatey(-1305px);
      position: relative;
      top: 31px;
    }


    #chatArea {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 300px;
      height: 400px;
      background-color: rgba(255, 255, 255, 0.5);
      overflow-y: scroll;
    }

    /* Button */
    button:nth-child(11) {
      transform: translatex(807px) translatey(-1279px);
    }

    .floating-textarea {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 300px;
      height: 200px;
      background-color: rgba(255, 255, 255, 0.8);
      border: 1px solid #ccc;
      padding: 10px;
      overflow-y: auto;
    }

    /* Chat area */
    #chatArea {
      transform: translatex(0px) translatey(-580px);
      margin-left: 0px;
      width: 174px !important;
      padding-bottom: 5px;
    }

    #chatArea {
      height: 400px;
      /* Adjust the height to your desired value */
      overflow-y: auto;
      line-height: 16px;
      word-wrap: break-word;
      word-break: break-word;
    }

    /* Styles for screens up to 600px */
    @media (max-width: 600px) {
      /* CSS rules for small screens */
    }

    /* Styles for screens between 601px and 1200px */
    @media (min-width: 601px) and (max-width: 1200px) {
      /* CSS rules for medium screens */
    }

    /* Styles for screens above 1200px */
    @media (min-width: 1201px) {
      /* CSS rules for large screens */
    }

    /* Message input */
    #messageInput {
      border-top-left-radius: 20px;
      border-top-right-radius: 20px;
      border-bottom-left-radius: 20px;
      border-bottom-right-radius: 20px;
      border-style: solid;
      border-width: 1px;
      border-color: #5d5959;
    }

    /* Chat area */
    #chatArea {
      top: 329px;
      bottom: auto !important;
      transform: translatex(-247px) translatey(162px);
    }

    /* 
/* Text */
    /* Chat area */
    #chatArea {
      transform: translatex(-683px) translatey(-433.4000244140625px);
      left: 1248px;
      right: auto !important;
      top: 637px;
      bottom: auto !important;
    }

    /* Message input */
    #messageInput {
      transform: translatex(47px) translatey(-1654px);
    }

    /* Image */
    img {
      transform: translatex(613px) translatey(-225px);
    }

    /* Control button */
    #controlButton {
      top: 12px;
    }

    /* Play button */
    #play-button {
      top: 16px;
    }

    /* Pause button */
    #pause-button {
      top: 14px;
    }

    /* Button */
    button {
      position: relative !important;
      top: 6px !important;
    }

    /* Button */
    button:nth-child(11) {
      transform: translatex(72px) translatey(-1671px);
      top: 16px !important;
      bottom: auto !important;
    }

    /* Paragraph */
    #chatArea p {
      font-size: 14px;
      white-space: break-spaces;
      font-weight: 400;
    }

    a

    /* Chat area */
    #chatArea {
      left: 1482px;
      right: auto !important;
      top: 551px;
      width: 221px !important;
    }

    /* Chat area */
    #chatArea {
      left: 1492px;
      width: 236px !important;
    }

    /* Message input */
    #messageInput {
      transform: translatex(35px) translatey(-1807px);
    }

    /* Button */
    button:nth-child(12) {
      transform: translatex(47px) translatey(-1812px);
    }

   

    /* Control button */
    #controlButton {
      transform: translatex(-176px) translatey(-2682px);
      width: 119px;
    }

    /* Play button */
    #play-button {
      transform: translatex(-56px) translatey(-2640px);
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-55px) translatey(-2640px);
      top: 6px;
      bottom: auto !important;
      left: -4px;
    }

    @media (min-width:768px) {

      /* Buttons */
      #buttons {
        transform: translatex(-30px) translatey(-1771px);
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(19px) translatey(-1904px);
      }

      /* Heading */
      h1:nth-child(13) {
        transform: translatex(16px) translatey(-1796px) !important;
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(40px) translatey(-1542px);
      }

    }

    /* Text Area */
    form textarea {
      height: 700px !important;
      top: -92px !important;
      bottom: auto !important;
      transform: translatex(123px) translatey(97px) !important;
    }

    /* Text Area */
    form:nth-child(9) textarea {
      top: -91px !important;
      bottom: auto !important;
    }

    /* Text */
    #text {
      top: -31px !important;
      bottom: auto !important;
      transform: translatex(29px) translatey(45px) !important;
    }

    /* Form */
    #myForm {
      top: -2110px !important;
      bottom: auto !important;
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      transform: translatex(95px) translatey(16px) !important;
      position: relative;
      left: -52px;
      top: -6px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      transform: translatex(103px) translatey(16px) !important;
      position: relative;
      left: -58px;
      top: -9px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      position: relative;
      top: -27px;
      left: -89px;
    }

    /* Save */
    #saveBtn {
      transform: translatex(-113px) translatey(0px) !important;
      left: 2px;
      top: -9px;
    }

   

    /* Button */
    button:nth-child(13) {
      transform: translatex(67px) translatey(-1953px);
    }

    /* Message input */
    #messageInput {
      transform: translatex(47px) translatey(-1945px);
    }

    /* Heading */
    h1 {
      padding-top: 8px;
    }

    /* Control button */
    #controlButton {
      transform: translatex(-176px) translatey(-2839px);
      top: 4px !important;
      bottom: auto !important;
      left: -5px;
    }

    /* Play button */
    #play-button {
      transform: translatex(-56px) translatey(-2790px);
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-51px) translatey(-2790px);
      left: -5px;
      top: 7px !important;
      bottom: auto !important;
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(869px) translatey(-2452.5px);
    }

    /* Create buttons button */
    #createButtonsButton {
      top: 1px !important;
      bottom: auto !important;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        left: 160px !important;
        right: auto !important;
        transform: translatex(881px) translatey(-815px) !important;
      }

      /* File name */
      #fileName {
        transform: translatex(3px) translatey(43px) !important;
      }

      /* File */
      #myFile {
        top: -45px;
        left: -243px;
      }

      /* Label */
      form label {
        transform: translatex(-27px) translatey(-1508px) !important;
        height: 40px !important;
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(40px) translatey(-1663px);
        top: -367px;
      }

      /* Heading */
      h1 {
        top: -5px !important;
        transform: translatex(19px) translatey(-1919px) !important;
        bottom: auto !important;
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(19px) translatey(-2028px);
      }

      /* Buttons */
      #buttons {
        transform: translatex(-26px) translatey(-2044px);
      }

    }

    /* Text Area */
    form textarea {
      height: 695px !important;
      top: -92px !important;
      bottom: auto !important;
    }

    /* Text Area */
    form:nth-child(9) textarea {
      top: -91px !important;
      bottom: auto !important;
    }

    /* Text */
    #text {
      top: -31px !important;
      bottom: auto !important;
      transform: translatex(29px) translatey(45px) !important;
    }

    /* Form */
    #myForm {
      top: -2099px !important;
      bottom: auto !important;
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      transform: translatex(95px) translatey(16px) !important;
      position: relative;
      left: -52px;
      top: -6px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      transform: translatex(103px) translatey(16px) !important;
      position: relative;
      left: -58px;
      top: -9px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      position: relative;
      top: -27px;
      left: -89px;
    }

    /* Save */
    #saveBtn {
      transform: translatex(-113px) translatey(0px) !important;
      left: 2px;
      top: -9px;
    }

    
    /* Stream deck */
    .stream-deck {
      transform: translatex(867px) translatey(-2445.5px);
    }

    /* Label */
    form:nth-child(10) label {
      width: 82px;
      left: -5px;
      top: -853px !important;
      bottom: auto !important;
    }

    /* Message input */
    #messageInput {
      transform: translatex(44px) translatey(-1957px);
      position: relative;
      top: 11px;
    }

    /* Button */
    button:nth-child(13) {
      transform: translatex(63px) translatey(-1966px);
      top: 20px !important;
      bottom: auto !important;
    }

    /* Label */
    form label {
      top: -858px !important;
    }

    /* Control button */
    #controlButton {
      transform: translatex(-175px) translatey(-2813px);
    }

    /* Play button */
    #play-button {
      transform: translatex(-56px) translatey(-2769px);
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-51px) translatey(-2771px);
      top: 9px !important;
      bottom: auto !important;
    }

    /* Button */
    form button {
      transform: translatex(-475px) translatey(-2450px) !important;
      width: 56% !important;
    }

    /* Tag btn2 */
    .tag-btn2 {
      transform: translatex(1056px) translatey(-3266px) !important;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        left: 160px !important;
        right: auto !important;
        transform: translatex(881px) translatey(-815px) !important;
      }

      /* File name */
      #fileName {
        transform: translatex(3px) translatey(43px) !important;
      }

      /* File */
      #myFile {
        top: -45px;
        left: -243px;
      }

      /* Label */
      form:nth-child(10) label {
        transform: translatex(-35px) translatey(-1492px);
      }

      /* Heading */
      h1 {
        transform: translatex(16px) translatey(-1933px) !important;
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(37px) translatey(-1678px);
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(16px) translatey(-2041px);
      }

      /* Buttons */
      #buttons {
        transform: translatex(-32px) translatey(-2036px);
      }

    }









    /* Body */
    body {
      position: fixed;
      left: 2px;
      top: 835px;
      min-height: 1548px;
      height: 1669px !important;
      margin-top: 3px;
      bottom: 10px;
    }

    /* Heading */
    h1 {
      display: none;
    }

    /* Label */
    #myForm label {
      top: -877px !important;
      position: relative;
      bottom: auto !important;
      width: 35% !important;
    }

    /* Button */
    #myForm button {
      min-height: 110px;
      height: 110px !important;
      width: 88px !important;
      left: 20px;
      transform: translatex(251px) translatey(-280px) !important;
      top: 10px !important;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(7) {
      top: -897px !important;
      bottom: auto !important;
      left: 29px !important;
      right: auto !important;
    }

    /* Label */
    #myForm label:nth-child(3) {
      top: -916px !important;
      bottom: auto !important;
    }

    /* Stream deck */
    .stream-deck {
      top: 56px;
      left: -8px;
      transform: translatex(762px) translatey(-3120.5px);
    }

    /* Form */
    #myForm {
      top: -2134px !important;
      bottom: auto !important;
    }

    /* Chat area */
    #chatArea {
      transform: translatex(-940px) translatey(880.6px);
      top: -465px;
      left: 1728px;
    }

  

    /* Message input */
    #messageInput {
      transform: translatex(44px) translatey(-2612px);
    }

    /* Button */
    button:nth-child(13) {
      transform: translatex(68px) translatey(-2622px);
    }

    /* Create buttons button */
    #createButtonsButton {
      top: 4px !important;
      bottom: auto !important;
    }

    /* Image */
    img {
      transform: translatex(591px) translatey(-997px);
    }

    /* Control button */
    #controlButton {
      transform: translatex(-197px) translatey(-3424px);
      left: -8px;
    }

    /* Form Division */
    form {
      top: -640px !important;
      bottom: auto !important;
    }

    /* Text */
    #text {
      transform: translatex(138px) translatey(47px) !important;
    }

    /* File name */
    #fileName {
      left: 58px;
      top: -39px;
    }

    /* Save */
    #saveBtn {
      left: 175px;
      top: -2px;
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      transform: translatex(153px) translatey(3px) !important;
      left: -88px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      transform: translatex(159px) translatey(4px) !important;
      top: -14px;
      left: -72px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      top: -45px;
      left: -43px;
    }

    /* Label */
    #myForm label:nth-child(5) {
      top: -889px !important;
      bottom: auto !important;
    }

    /* Play button */
    #play-button {
      transform: translatex(-80px) translatey(-3379px);
    }

    /* Pause button */
    #pause-button {
      transform: translatex(-74px) translatey(-3381px);
    }

    /* Button */
    form:nth-child(10) button {
      transform: translatex(-1369px) translatey(-2018px) !important;
    }

    @media (min-width:768px) {

      /* Label */
      #myForm label {
        transform: translatex(-25px) translatey(894px) !important;
      }

      /* Label */
      #myForm label:nth-child(5) {
        transform: translatex(-27px) translatey(831px) !important;
      }

      /* Label */
      #myForm label:nth-child(7) {
        transform: translatex(-22px) translatey(807px) !important;
      }

      /* Form */
      #myForm {
        left: 147px !important;
        right: auto !important;
        transform: translatex(784px) translatey(-1409px) !important;
      }

      /* Body */
      body {
        height: 1426px;
      }

      /* Player */
      #player {
        top: -737px;
      }

      /* Speaker form */
      #speakerForm {
        transform: translatex(568px) translatey(-528px) !important;
      }

      /* Label */
      form:nth-child(10) label {
        transform: translatex(-881px) translatey(-1086px) !important;
      }

      /* Num speakers */
      #numSpeakers {
        transform: translatex(40px) translatey(-2286px);
      }

      /* Create buttons button */
      #createButtonsButton {
        transform: translatex(32px) translatey(-2657px);
        left: 15px;
      }

      /* Image */
      img {
        left: 29px;
      }

      /* Form Division */
      form {
        left: 53px !important;
        transform: translatex(1365px) translatey(-980px) !important;
      }

      /* Text */
      #text {
        left: -78px;
      }

      /* Form Division */
      form:nth-child(7) {
        transform: translatex(1426px) translatey(-1129px) !important;
        left: -142px !important;
        right: auto !important;
      }

      /* File */
      #myFile {
        left: -72px;
        top: -38px;
      }

      /* Buttons */
      #buttons {
        transform: translatex(-42px) translatey(-2652px);
      }

      /* Form Division */
      form:nth-child(10) {
        position: sticky;
      }

    }

    /* Body */
    body {
      top: 775px;
      position: fixed;
    }

    /* Form */
    #myForm {
      min-height: 222px;
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(43px) translatey(-2796px);
      top: 80px;
    }

    /* Control button */
    #controlButton {
      transform: translatex(-194px) translatey(-3327px);
      left: -12px;
      top: 23px !important;
      bottom: auto !important;
    }

    /* Tag btn2 */
    .tag-btn2 {
      display: none;
    }

    /* Button */
    form button {
      top: 14px !important;
      bottom: auto !important;
    }

    /* Message input */
    #messageInput {
      top: 28px;
    }

    /* Button */
    button:nth-child(13) {
      top: 37px !important;
      bottom: auto !important;
      left: -6px;
    }

    /* Play button */
    #play-button {
      top: 32px !important;
      bottom: auto !important;
    }

    /* Pause button */
    #pause-button {
      top: 15px !important;
      bottom: auto !important;
      transform: translatex(-79px) translatey(-3362px);
      left: -3px;
    }

    /* Image */
    img {
      top: 393px;
    }

   
    /* Chat area */
    #chatArea {
      transform: translatex(-923px) translatey(738.6px);
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      left: -56px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      left: -62px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      left: -37px;
    }

    /* Buttons */
    #buttons {
      display: none;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        left: 150px !important;
        right: auto !important;
        transform: translatex(-72px) translatey(-564px) !important;
      }

      /* Player */
      #player {
        top: -717px;
      }

      /* Label */
      form label {
        transform: translatex(-888px) translatey(-1059px) !important;
      }

      /* Buttons */
      #buttons {
        transform: translatex(171px) translatey(-2579px);
      }

    }

    /* Body */
    body {
      top: 779px;
      position: fixed;
    }

    /* Form */
    #myForm {
      min-height: 222px;
    }

    /* Stream deck */
    .stream-deck {
      transform: translatex(43px) translatey(-2796px);
      top: 80px;
    }

    /* Control button */
    #controlButton {
      transform: translatex(-193px) translatey(-2609px);
      left: -10px;
      top: 18px !important;
      bottom: auto !important;
    }

    /* Tag btn2 */
    .tag-btn2 {
      display: none;
    }

    /* Button */
    form button {
      top: 14px !important;
      bottom: auto !important;
    }

    /* Message input */
    #messageInput {
      top: 28px;
    }

    /* Button */
    button:nth-child(13) {
      top: 37px !important;
      bottom: auto !important;
      left: -6px;
    }

    /* Play button */
    #play-button {
      top: 30px !important;
      bottom: auto !important;
      transform: translatex(-75px) translatey(-2663px);
      left: -4px;
    }

    /* Pause button */
    #pause-button {
      top: 15px !important;
      bottom: auto !important;
      transform: translatex(-76px) translatey(-2648px);
      left: -3px;
    }

    /* Image */
    img {
      top: 393px;
    }

    
    /* Chat area */
    #chatArea {
      transform: translatex(-923px) translatey(738.6px);
    }

    /* Input */
    form:nth-child(9) input[type=text] {
      left: -56px;
    }

    /* Input */
    form:nth-child(9) input:nth-child(3) {
      left: -62px;
    }

    /* Input */
    form:nth-child(9) input[type=file] {
      left: -37px;
    }

    /* Buttons */
    #buttons {
      display: none;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        left: 150px !important;
        right: auto !important;
        transform: translatex(-72px) translatey(-564px) !important;
      }

      /* Player */
      #player {
        top: -717px;
      }

      /* Label */
      form label {
        transform: translatex(-888px) translatey(-1059px) !important;
      }

      /* Buttons */
      #buttons {
        transform: translatex(171px) translatey(-2579px);
      }

    }










    /* Styles for the dynamic form */
    #myForm {
      max-width: 400px;
      margin: 0 auto;
      padding: 20px;
      background-color: #500505;
      border: 1px solid #ddd;
      border-radius: 5px;
    }

    #myForm label {
      display: block;
      margin-bottom: 10px;
    }

    #myForm input[type="text"],
    #myForm select {
      width: 100%;
      height: 30px;
      padding: 5px;
      border: 1px solid #ddd;
      border-radius: 5px;
    }

    #myForm button[type="submit"] {
      display: block;
      width: 100%;
      padding: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    #myForm button[type="submit"]:hover {
      background-color: #45a049;
    }











    /* Styling for form 1 */
    #form1 select {
      width: 100%;
      height: 40px;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form1 input[type="text"] {
      width: 100%;
      height: 40px;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form1 button[type="submit"] {
      background-color: #4CAF50;
      color: white;
      padding: 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    /* Styling for form 2 */
    #form2 select {
      width: 100%;
      height: 40px;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form2 input[type="text"],
    #form2 input[type="email"] {
      width: 100%;
      height: 40px;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form2 textarea {
      width: 100%;
      margin: 10px 0;
      padding: 5px;
      border: none;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    }

    #form2 button[type="submit"] {
      background-color: #4CAF50;
      color: white;
      padding: 10px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }


    /* Text Area */
    form textarea {
      bottom: -110px !important;
    }

    /* Body */
    body {
      top: 10px;
      position: relative;
    }

    /* Stream deck */
    .stream-deck {
      top: 796px;
    }

    /* Image */
    img {
      top: 1199px;
    }

   
    /* Label */
    form:nth-child(10) label {
      top: -15px !important;
    }

    /* Play button */
    #play-button {
      top: 836px !important;
    }

    /* Pause button */
    #pause-button {
      top: 820px !important;
    }

    /* Control button */
    #controlButton {
      top: 831px !important;
    }

    /* Form */
    #myForm {
      min-height: 278px;
      height: 278px;
      margin-left: 23px;
      margin-right: 11px;
      top: -2115px !important;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(9) {
      top: -892px !important;
      bottom: auto !important;
      margin-bottom: 6px;
    }

    /* Reference input */
    #Reference-input {
      transform: translatex(142px) translatey(-71px) !important;
    }

    /* Destination input */
    #Destination-input {
      transform: translatex(140px) translatey(-104px) !important;
    }

    /* Payload input */
    #Payload-input {
      transform: translatex(141px) translatey(-140px) !important;
    }

    /* Time date input */
    #TimeDate-input {
      transform: translatex(142px) translatey(-170px) !important;
    }

    /* Button */
    #myForm button {
      transform: translatex(253px) translatey(-306px) !important;
    }

    /* Form Division */
    form:nth-child(7) {
      top: 762px !important;
    }

    /* Form Division */
    form:nth-child(9) {
      top: 175px !important;
    }

    @media (min-width:768px) {

      /* Player */
      #player {
        top: 74px;
      }

      /* Label */
      #myForm label:nth-child(9) {
        transform: translatex(-23px) translatey(766px) !important;
      }

      /* Form */
      #myForm {
        transform: translatex(-176px) translatey(126px) !important;
        left: 175px !important;
        right: auto !important;
      }

      /* Label */
      form:nth-child(10) label {
        transform: translatex(-915px) translatey(-1095px) !important;
      }

    }

    /* Additional CSS styles for both forms */
    /* ... */
    /* Heading */
    h2 {
      transform: translatex(152px) translatey(-1945px);
      width: 12%;
      background-color: #dcbc2c;
      border-style: solid;
      border-width: 1px;
      position: relative;
      top: -25px;
      left: -3px;
    }

    /* Button */
    #myForm button {
      background-color: #444444;
      box-shadow: 0px 0px 1px 2px #070707;
      left: 60px;
      line-height: 24px;
    }

    /* Time date input */
    #TimeDate-input {
      padding-right: 0px !important;
      width: 154px !important;
    }

    /* Payload input */
    #Payload-input {
      width: 149px !important;
    }

    /* Destination input */
    #Destination-input {
      width: 148px !important;
    }

    /* Select location */
    #selectLocation {
      left: -323px;
    }

    /* Form */
    #myForm {
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;
      background-color: #333333;
    }

    /* Stream deck */
    .stream-deck {
      background-color: #333333;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key {
      background-color: #444444;
    }

    @media (min-width:768px) {

      /* Form */
      #myForm {
        width: 421px !important;
      }

    }

    /* Message input */
    #messageInput {
      top: 313px;
      transform: translatex(31px) translatey(-1848px);
    }

    /* Button */
    button {
      top: 790px !important;
    }

    /* Button */
    button:nth-child(13) {
      top: 319px !important;
      transform: translatex(64px) translatey(-1852px);
    }

    /* Play button */
    #play-button {
      left: 762px;
      display: none;
    }

    /* Pause button */
    #pause-button {
      left: 638px;
      display: none;
    }

    /* Control button */
    #controlButton {
      transform: translatex(505px) translatey(-2612px);
      left: -13px;
      display: none;
    }

    /* Heading */
    h2 {
      left: 27px;
      top: 26px;
      border-top-left-radius: 15px;
      border-top-right-radius: 15px;
      border-bottom-left-radius: 15px;
      border-bottom-right-radius: 15px;
      text-align: center;
    }

    /* Stream deck */
    .stream-deck {
      top: 845px;
    }

    /* Form */
    #myForm {
      top: -2063px !important;
      bottom: auto !important;
    }

    /* Select location */
    #selectLocation {
      top: -2px;
      width: 144px !important;
    }

    /* Reference input */
    #Reference-input {
      width: 148px !important;
      height: 26px !important;
    }

    /* Destination input */
    #Destination-input {
      height: 29px !important;
    }

    /* Payload input */
    #Payload-input {
      height: 28px !important;
    }

    /* Time date input */
    #TimeDate-input {
      height: 26px !important;
    }

    /* Button */
    #myForm button {
      top: -14px !important;
      bottom: auto !important;
    }

    /* Form */
    #myForm {
      min-height: 333px;
    }

    
    /* Button */
    button {
      transform: translatex(1244px) translatey(-2766px) !important;
      background-color: #565656 !important;
      border-style: solid !important;
      border-width: 1px !important;
      border-color: #000000 !important;
    }

    /* Form */
    #myForm {
      top: -2048px !important;
      bottom: auto !important;
      background-color: #fae019;
      color: #000000;
      border-width: 1px;
      border-color: #000000;
      box-shadow: 6px -7px 19px -5px #181515;
      background-blend-mode: normal;
      background-attachment: scroll;
      background-image: linear-gradient(to right, #06beb6 0%, #48b1bf 100%);
    }

    /* Button */
    button:nth-child(31) {
      transform: translatex(1143px) translatey(-2883px) !important;
      width: 94px;
      min-height: 109px;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key {
      background-color: #444444;
    }

    /* Stream deck  key */
    .stream-deck .stream-deck__key:nth-child(5) {
      background-color: #fae019;
      color: #000000;
      background-image: linear-gradient(to right, #06beb6 0%, #48b1bf 100%);
    }

    /* Reference input */
    #Reference-input {
      border-width: 1px !important;
      border-color: #000000;
      border-style: solid !important;
    }

    /* Destination input */
    #Destination-input {
      border-color: #000000;
      border-style: solid !important;
      border-width: 1px !important;
    }

    /* Payload input */
    #Payload-input {
      border-style: solid !important;
      border-width: 1px !important;
    }

    /* Time date input */
    #TimeDate-input {
      border-width: 1px !important;
      border-style: solid !important;
    }

    @media (min-width:768px) {


      /* Form */
      #myForm {
        transform: translatex(-139px) translatey(-333px) !important;
      }

    


      /* Speaker form */
      #speakerForm {
        transform: translatex(556px) translatey(-288px) !important;
      }

    }

    /* Heading */
    h2 {
      transform: translatex(136px) translatey(-1894px);
    }

    /* Body */
    body {
      top: 61px;
    }

    /* Button */
    button {
      transform: translatex(103px) translatey(-1852px) !important;
    }

    /* Form */
    #myForm {
      top: -2039px !important;
      bottom: auto !important;
    }

    /* Label */
    #myForm label:nth-child(9) {
      font-weight: 700;
    }

    /* Label */
    #myForm label:nth-child(7) {
      font-weight: 700;
    }

    /* Label */
    #myForm label:nth-child(5) {
      font-weight: 700;
    }

    /* Label */
    #myForm label:nth-child(3) {
      font-weight: 700;
    }

    /* Label */
    #myForm label:nth-child(1) {
      font-weight: 700;
      left: 28px !important;
      right: auto !important;
    }


/* SPMT Form Styles */
#spmtForm {
  margin-bottom: 20px;
}

#spmtForm label {
  font-weight: bold;
}

#spmtForm select,
#spmtForm input[type="text"] {
  width: 100%;
  height: 40px;
  margin: 10px 0;
  padding: 5px;
  border: none;
  border-radius: 5px;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

#spmtForm button[type="submit"] {
  background-color: #4caf50;
  color: white;
  padding: 10px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}





/* Label */
#spmtForm label{
 top:500px !important;
 left:6px !important;
 right:auto !important;
 color:#ffffff;
}

/* Spmt form */
#spmtForm{
 bottom:13px !important;
 min-height:446px;
 height:446px !important;
 border-style:solid;
 border-width:1px;
 background-image:linear-gradient(to right, #141e30 0%, #243b55 100%);
 border-top-left-radius:20px;
 border-top-right-radius:20px;
 border-bottom-left-radius:20px;
 border-bottom-right-radius:20px;
 background-size:contain;
}

/* Spmt Unknown location */
#spmtSelectLocation{
 width:54% !important;
 transform:translatex(67px) translatey(15px);
 position:relative;
 top:-2px;
 left:-14px;
}

/* Spmt reference input */
#spmtReference-input{
 transform:translatex(-379px) translatey(116px) !important;
 position:relative;
 top:-6px;
}

/* Spmt destination input */
#spmtDestination-input{
 transform:translatex(73px) translatey(108px) !important;
 position:relative;
 left:-15px;
}

/* Spmt payload input */
#spmtPayload-input{
 transform:translatex(-219px) translatey(178px) !important;
 position:relative;
 left:49px;
}

/* Spmt time date input */
#spmtTimeDate-input{
 transform:translatex(117px) translatey(155px) !important;
 position:relative;
 left:19px;
 top:30px;
}

/* Label */
#spmtForm label:nth-child(1){
 width:75px !important;
 top:510px !important;
 bottom:auto !important;
}

/* Body */
body{
 left:42px;
}

/* Label */
#spmtForm label:nth-child(9){
 left:21px !important;
 right:auto !important;
 top:520px !important;
 bottom:auto !important;
}

/* Button */
#spmtForm button{
 top:482px !important;
 width:90px !important;
 height:108px;
 transform:translatex(203px) translatey(-419px) !important;
 background-color:#7d2f2f !important;
 border-width:1px;
 border-color:#ffffff !important;
 box-shadow:0px 0px 3px 0px #ffffff;
}

@media (min-width:768px){

 /* Spmt form */
 #spmtForm{
  width:670px !important;
  left:28px !important;
  transform:translatex(578px) translatey(-1586px) !important;
 }
 
 /* Form */
 #myForm{
  transform:translatex(-142px) translatey(221px) !important;
 }
 
 /* Label */
 #spmtForm label{
  transform:translatex(-1302px) translatey(-519px) !important;
 }
 
 /* Label */
 #spmtForm label:nth-child(1){
  transform:translatex(15px) translatey(-491px) !important;
 }
 
 /* Label */
 #spmtForm label:nth-child(3){
  transform:translatex(-416px) translatey(-395px) !important;
 }
 
 /* Label */
 #spmtForm label:nth-child(5){
  transform:translatex(12px) translatey(-392px) !important;
 }
 
 /* Label */
 #spmtForm label:nth-child(7){
  transform:translatex(-210px) translatey(-334px) !important;
 }
 
 /* Label */
 #spmtForm label:nth-child(9){
  transform:translatex(-457px) translatey(-261px) !important;
 }
 
}

/* Label */
#spmtForm label{
 top:500px !important;
 left:6px !important;
 right:auto !important;
 color:#ffffff;
}

/* Spmt form */
#spmtForm{
 bottom:13px !important;
 min-height:446px;
 height:446px !important;
 border-style:solid;
 border-width:1px;
 background-image:linear-gradient(to right, #141e30 0%, #243b55 100%);
 border-top-left-radius:20px;
 border-top-right-radius:20px;
 border-bottom-left-radius:20px;
 border-bottom-right-radius:20px;
 background-size:contain;
}

/* Spmt Unknown location */
#spmtSelectLocation{
 width:54% !important;
 transform:translatex(67px) translatey(15px);
 position:relative;
 top:-2px;
 left:-14px;
}

/* Spmt reference input */
#spmtReference-input{
 transform:translatex(-379px) translatey(116px) !important;
 position:relative;
 top:-6px;
}

/* Spmt destination input */
#spmtDestination-input{
 transform:translatex(73px) translatey(108px) !important;
 position:relative;
 left:-15px;
}

/* Spmt payload input */
#spmtPayload-input{
 transform:translatex(-219px) translatey(178px) !important;
 position:relative;
 left:49px;
}

/* Spmt time date input */
#spmtTimeDate-input{
 transform:translatex(117px) translatey(155px) !important;
 position:relative;
 left:19px;
 top:30px;
}

/* Label */
#spmtForm label:nth-child(1){
 width:75px !important;
 top:510px !important;
 bottom:auto !important;
}

/* Body */
body{
 left:42px;
}


/* Stream deck  key */
.stream-deck .stream-deck__key:nth-child(10){
 background-image:linear-gradient(to right, #141e30 0%, #243b55 100%);
}

@media (min-width:768px){


 /* Form */
 #myForm{
  transform:translatex(-142px) translatey(221px) !important;
 }
 
}
/* Body */
body{
 position:fixed;
}


/* Form */
#myForm{
 top:341px !important;
}

/* Spmt form */


@media (min-width:768px){

 /* Form */
 #myForm{
  position:fixed;
  transform:translatex(-174px) translatey(735px) !important;
 }
 

 
}




   /* Form styling */
   form {
  max-width: 400px;
  margin: 0 auto;
  padding: 20px;
  background-color: #f9f9f9;
  border: 1px solid #ccc;
  border-radius: 5px;
}

/* Label styling */
form label {
  display: block;
  font-weight: bold;
  margin-bottom: 5px;
}

/* Input field styling */
form input[type="text"],
form input[type="date"],
form textarea,
form select {
  width: 100%;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
  margin-bottom: 10px;
  font-size: 16px;
}

/* Button styling */
form button[type="submit"] {
  background-color: #06beb6;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

form button[type="submit"]:hover {
  background-color: #48b1bf;
}

/* Optional: Additional styling for specific form elements */

/* Adjust select dropdown width */
form select {
  width: 100%;
}

/* Adjust textarea height */
form textarea {
  height: 100px;
}

/* Adjust label position for left-aligned labels */
form .u-label-left {
  text-align: left;
}

/* Adjust form container width */
.u-section-1 .u-sheet .u-gradient form {
  max-width: 600px;
}

/* Adjust form container position */
.u-section-1 .u-sheet .u-gradient form {
  margin: 0 auto;
  margin-top: 20px;
  margin-bottom: 20px;
}


/* Text Area */
form textarea{
 transform:translatex(28px) translatey(82px) !important;
}

/* Form2 */
#form2{
 margin-right:22px;
 margin-left:17px;
 min-height:531px;
 height:548px;
 top:-655px !important;
 bottom:auto !important;
}

/* Label */
#form1 label{
 top:488px !important;
 bottom:auto !important;
}

/* Form1 */
#form1{
 margin-left:16px;
 margin-right:5px;
 min-height:530px;
 height:549px;
}

/* Heading */
h2{
 display:none;
}

/* Label */
#form2 label{
 top:608px !important;
 left:600px !important;
 bottom:auto !important;
}

/* Button */
#form1 button{
 transform:translatex(-7px) translatey(-10px) !important;
 left:16px;
 top:21px !important;
 bottom:auto !important;
}

/* Select */
#form2 select{
 width:58% !important;
 transform:translatex(113px) translatey(-5px);
}

/* Input */
#form2 input[type=text]{
 transform:translatex(127px) translatey(-4px) !important;
 width:162px !important;
}

/* Select */
#form1 select{
 width:55% !important;
 transform:translatex(123px) translatey(13px);
}

/* Input */
#form1 input[type=text]{
 width:175px !important;
 transform:translatex(123px) translatey(-9px) !important;
 position:relative;
 top:7px;
}

/* Button */
#form2 button{
 transform:translatex(9px) translatey(15px) !important;
 top:-6px !important;
 bottom:auto !important;
}

/* Button */
form button{
 transform:translatex(-2313px) translatey(-2116px) !important;
}

/* Button */
form:nth-child(10) button{
 transform:translatex(-2313px) translatey(-2097px) !important;
 top:802px !important;
 bottom:auto !important;
}

/* Video input */
#videoIdInput{
 transform:translatex(-2292px) translatey(-3472px) !important;
 top:2227px;
 width:164px !important;
}

/* Chat area */
#chatArea{
 transform:translatex(-873px) translatey(1155px);
 height:283px;
}

/* Form Division */
form{
 margin-left:57px !important;
 margin-right:25px !important;
}

/* Message input */
#messageInput{
 min-height:39px;
 transform:translatex(44px) translatey(-1914px);
}

/* Stream deck */
.stream-deck{
 transform:translatex(52px) translatey(-2867px);
}

/* Send button */
#sendButton{
 transform:translatex(81px) translatey(-1924px) !important;
 background-color:#e2e2e2 !important;
}

@media (min-width:768px){

 /* Speaker form */
 #speakerForm{
  transform:translatex(458px) translatey(-210px) !important;
 }
 
 /* Label */
 #form2 label{
  transform:translatex(-593px) translatey(-568px) !important;
 }
 
 /* Label */
 #form1 label{
  transform:translatex(36px) translatey(-445px) !important;
 }
 
 /* Label */
 form label{
  transform:translatex(-1901px) translatey(-1182px) !important;
 }
 
 /* Form2 */
 #form2{
  transform:translatex(1138px) translatey(-2585px) !important;
 }
 
 /* Form1 */
 #form1{
  transform:translatex(703px) translatey(-2050px) !important;
 }
 
 /* Label */
 form:nth-child(10) label{
  transform:translatex(-1901px) translatey(-1180px) !important;
 }
 
 /* Form Division */
 form:nth-child(9){
  transform:translatex(-57px) translatey(-578px) !important;
 }
 
 /* Form Division */
 form{
  transform:translatex(977px) translatey(-801px) !important;
 }
 
 /* Form Division */
 form:nth-child(7){
  transform:translatex(586px) translatey(-314px) !important;
 }
 
}

#inputVideo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#inputVideo label {
  margin-bottom: 10px;
  font-weight: bold;
}

#inputVideo input[type="text"] {
  padding: 5px;
  width: 200px;
  margin-bottom: 10px;
}

#inputVideo button[type="submit"] {
  padding: 10px 20px;
  background-color: #4CAF50;
  color: white;
  border: none;
  cursor: pointer;
}

#inputVideo button[type="submit"]:hover {
  background-color: #45a049;
}

/* Body */
body{
 top:-1px;
 left:-23px;
}

/* Button */
#inputVideo button{
 left:1111px;
 top:1360px !important;
 bottom:auto !important;
 transform:translatex(-2182px) translatey(-3429px) !important;
}

/* Video input */
#videoIdInput{
 position:relative;
 top:4079px;
 left:1119px;
 transform:translatex(-1865px) translatey(-6101px) !important;
}

/* Label */
#inputVideo label{
 left:1072px;
 top:-61px !important;
}

/* Form2 */
#form2{
 top:-677px !important;
 bottom:auto !important;
 background-image:linear-gradient(to right, #141e30 0%, #243b55 100%);
 color:#f4f4f4;
 border-style:solid;
 border-width:1px;
 border-top-left-radius:20px;
 border-top-right-radius:20px;
 border-bottom-left-radius:20px;
 border-bottom-right-radius:20px;
 box-shadow:1px 2px 8px 2px #000000;
}

/* Form1 */
#form1{
 top:-614px !important;
 bottom:auto !important;
 background-image:linear-gradient(to right, #c9d6ff 0%, #e2e2e2 100%);
 border-top-left-radius:20px;
 border-top-right-radius:20px;
 border-bottom-left-radius:20px;
 border-bottom-right-radius:20px;
 box-shadow:1px 1px 2px 2px #212529;
}

/* Chat area */
#chatArea{
 transform:translatex(-1704px) translatey(1090px);
 top:-474px;
 bottom:auto !important;
}

/* Message input */
#messageInput{
 top:302px;
 left:4px;
}

/* Send button */
#sendButton{
 transform:translatex(77px) translatey(-2379px) !important;
 color:#000000;
 top:773px !important;
 bottom:auto !important;
}

/* Select */
#form2 select{
 position:relative;
 left:23px;
}

/* Label */
#form1 label{
 left:-18px;
 top:496px !important;
 bottom:auto !important;
}

/* Select */
#form1 select{
 position:relative;
 top:-7px;
 left:20px;
}

/* Button */
#form2 button{
 background-color:#e3b23f !important;
}

/* Button */
#form1 button{
 background-color:#d4ab16 !important;
}

/* Stream deck */
.stream-deck{
 transform:translatex(557px) translatey(-2496px);
 display:none;
}

@media (min-width:768px){

 /* Form1 */
 #form1{
  left:60px !important;
  transform:translatex(671px) translatey(-1608px) !important;
  right:auto !important;
 }
 
 /* Form2 */
 #form2{
  transform:translatex(1107px) translatey(-2098px) !important;
 }
 
 /* Label */
 #inputVideo label{
  transform:translatex(-1929px) translatey(-1908px) !important;
 }
 
}

/* Input */
#form1 input[type=datetime-local]{
 position:relative;
 top:-38px;
 width:162px !important;
 height:39px !important;
}

/* Label */
#form1 label:nth-child(9){
 top:490px !important;
 bottom:auto !important;
}

/* Input */
#form2 input[type=datetime-local]{
 position:relative;
 top:-52px;
 width:162px !important;
 height:36px !important;
}

/* Button */
#form2 button{
 border-color:#f9f9f9 !important;
 color:#020202 !important;
 font-weight:500;
}

@media (min-width:768px){

 /* Label */
 #form2 label:nth-child(9){
  transform:translatex(-586px) translatey(-586px) !important;
 }
 
}

/* Qbtn */
#Qbtn{
 display:none !important;
}

/* Abtn */
#Abtn{
 display:none !important;
}


  </style>
</head>
<!-- <link rel="stylesheet" type="text/css" href="views/home/forms.css"> -->

<meta name="viewport" content="width=device-width, initial-scale=1.0">
<!-- 
<link rel="stylesheet" href="//capp.nicepage.com/9afaf170b86701c5f7507f813250e585a6b39559/nicepage.css" media="screen">
<link rel="stylesheet" href="/views/home/nicepage-site.css" media="screen">
<link rel="stylesheet" href="/views/home/Accueil.css" media="screen">
    <script class="u-script" type="text/javascript" src="//capp.nicepage.com/assets/jquery-3.5.1.min.js" defer=""></script>
    <script class="u-script" type="text/javascript" src="//capp.nicepage.com/9afaf170b86701c5f7507f813250e585a6b39559/nicepage.js" defer=""></script>
    <meta name="generator" content="Nicepage 5.5.0, nicepage.com">
    <meta name="referrer" content="origin">
    <link id="u-theme-google-font" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i|Open+Sans:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i">
     -->


<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.min.js"></script>


<script src="/socket.io/socket.io.js"></script>
<script src="https://cdn.jsdelivr.net/npm/uuid@8.3.2/dist/umd/uuidv4.min.js"></script>
<!-- Include the CSS file -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<!-- Include the JavaScript file -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script src="https://cdn.socket.io/4.6.0/socket.io.min.js"
  integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+" crossorigin="anonymous"></script>

<!-- <script src="https://cdn.socket.io/4.0.1/socket.io.min.js"></script> -->


<body>
  <h1>
    <%= title %>
  </h1>
  <img src="<%= thumbnailUrl %>">
  <script src="https://www.youtube.com/player_api"></script>
  <script src="https://api.trello.com/1/client.js?key=3da0322f390be3d7e919f662025de4ef"></script>

  <!-- <iframe id="video-player" width="560" height="315" src="https://www.youtube.com/embed/<%= videoId %>" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe> -->
  <iframe id="player" width="640" height="360" src="https://www.youtube.com/embed/<%= videoId %>?enablejsapi=1"
    frameborder="0" allowfullscreen=""></iframe>
  <!-- <iframe id="player" width="640" height="360" src="https://www.youtube.com/embed/<%= videoId %>?enablejsapi=1&controls=0&disablekb=1"
      frameborder="0" allowfullscreen=""></iframe> -->
  <!-- <iframe id="player" width="640" height="360" src="https://www.youtube.com/embed/<%= videoId %>?enablejsapi=1&controls=0&disablekb=1"
        frameborder="0" allowfullscreen=""></iframe>
       -->
  <h1>Enter the number of speakers</h1>
  <form>
    <textarea id="text" placeholder="Transcription"></textarea>
    <input type="text" id="fileName" placeholder="Enter File Name">
    <input type="submit" value="Save &amp; Download" id="saveBtn">
    <input id="myFile" type="file" />
  </form>
  <h1>Enter the number of speakers</h1>

  <form>
    <textarea id="text2" placeholder="Summary"></textarea>
    <input type="text" id="fileName2" placeholder="Enter File Name">
    <input type="submit" value="Save &amp; Download" id="saveBtn2">
    <input id="myFile2" type="file" />
  </form>
  <!-- <input type="text" id="textInput">
  <button onclick="displayText()">Send</button>
  <div id="floatingDiv" class="floating-textarea"></div>

   -->



  <div id="chatArea" class="floating-textarea"></div>
  <input type="text" id="messageInput" placeholder="Enter your message">
  <button id="sendButton">Send</button>


  <h1>Enter the number of speakers</h1>

  <form id="speakerForm">
    <input type="number" id="speakerCount" name="speakerCount">
    <button type="submit">Submit</button>
  </form>

  <hr>
  <!-- <label for="numSpeakers">Number of Speakers:</label> -->
  <!-- <input type="number" id="numSpeakers" name="numSpeakers" value="2">
  <button id="createButtonsButton" onclick="createButtons();this.disabled=true;this.style.background='grey';">Create
    Buttons</button> -->

  <div id="buttons"></div>
  <!-- <div id="player"></div> -->
  <!-- <button id="play-button" >Play</button>
  <button id="pause-button">Pause</button> -->

  <button id="play-button">Play</button>
  <button id="pause-button">Pause</button>
  <button id="controlButton">Take Control</button>
  <!-- <button onclick="controlVideo()">Take Control</button> -->

  <button id="Qbtn" class="tag-btn">Qbtn</button>
  <button id="Abtn" class="tag-btn">Abtn</button>


  <button id="Qbtn2" class="tag-btn2">Qbtn</button>
  <button id="Abtn2" class="tag-btn2">Abtn</button>


  <div class="stream-deck">
    <div class="stream-deck__key stream-deck__key--1">
      <div class="stream-deck__key__label">1</div>
    </div>
    <div class="stream-deck__key stream-deck__key--2">
      <div class="stream-deck__key__label">2</div>
    </div>
    <div class="stream-deck__key stream-deck__key--3">
      <div class="stream-deck__key__label">3</div>
    </div>
    <div class="stream-deck__key stream-deck__key--4">
      <div class="stream-deck__key__label">4</div>
    </div>
    <div class="stream-deck__key stream-deck__key--5" id="stream-deck-5">
      <div class="stream-deck__key__label">Cranes</div>
    </div>
    <div class="stream-deck__key stream-deck__key--6">
      <div class="stream-deck__key__label">6</div>
    </div>
    <div class="stream-deck__key stream-deck__key--7">
      <div class="stream-deck__key__label">7</div>
    </div>
    <div class="stream-deck__key stream-deck__key--8">
      <div class="stream-deck__key__label">8</div>
    </div>
    <div class="stream-deck__key stream-deck__key--9">
      <div class="stream-deck__key__label">9</div>
    </div>
    <div class="stream-deck__key stream-deck__key--10" id="stream-deck-10">
      <div class="stream-deck__key__label">10</div>
    </div>
    <div class="stream-deck__key stream-deck__key--11">
      <div class="stream-deck__key__label">11</div>
    </div>
    <div class="stream-deck__key stream-deck__key--12">
      <div class="stream-deck__key__label">12</div>
    </div>
  </div>
  <!-- 
<form>
  <button id="Evnt-btn" class="localisation">Add Event</button>
  <button id="Area-btn" class="localisation">Add Area</button>
  <button id="Hrdware-btn" class="localisation">Add Hardware</button>
  

  <input type="text" id="Evnt-input" name="Event Input">

  <input type="text" id="Area-input" name="Area Input">

  <input type="text" id="Hrdware-input" name="Hardware Input">
</form> -->
  <!--  
<form>
  <select id="selectLocation" name="selectLocation" style="width: 100px; height: 30px; margin: 10px;">
    <option value="______">____________</option>
    <option value="Massey">Massey</option>
    <option value="Production Site">Production Site</option>
    <option value="Launch Complex">Launch Complex</option>
  </select>
  
  <input type="text" id="Evnt-input" name="Event Input">
  <input type="text" id="Area-input" name="Area Input">
  <input type="text" id="Hrdware-input" name="Hardware Input">

  <button type="submit">Submit</button>
</form> -->
<form id="form1" action="/api/location/videoId/username" method="POST">
  <label for="selectLocation1">Select Location:</label>
  <select id="selectLocation1" name="selectLocation1">
    <option value="Launch Site">Launch Site</option>
    <option value="Production Site">Production Site</option>
    <option value="Massey's">Massey's</option>
    <option value="Sanchez">Sanchez</option>
  </select>

  <label for="Reference-input1">Reference:</label>
  <input type="text" id="Reference-input1" name="reference" required>

  <label for="Payload-input1">Payload:</label>
  <input type="text" id="Payload-input1" name="payload" required>

  <label for="TimeDate-input1">Time and Date:</label>
  <input type="datetime-local" id="TimeDate-input1" name="timedate" required>

  <label for="Destination-input1">Destination:</label>
  <input type="text" id="Destination-input1" name="destination" required>

  <button type="submit">Submit</button>
</form>
<form id="form2">
  <label for="selectLocation2">Select Location</label>
  <select id="selectLocation2" name="selectLocation">
    <option value="Massey's">Massey's</option>
    <option value="Production Site">Production Site</option>
    <option value="Launch Site">Launch Site</option>
    <option value="Sanchez">Sanchez</option>
  </select>
  <label for="Reference-input2">Reference</label>
  <input type="text" id="Reference-input2" name="Reference-input">
  <label for="Destination-input2">Destination</label>
  <input type="text" id="Destination-input2" name="Destination-input">
  <label for="Payload-input2">Payload</label>
  <input type="text" id="Payload-input2" name="Payload-input">
  <label for="TimeDate-input2">Date</label>
  <!-- <input type="text" id="TimeDate-input2" name="TimeDate-input"> -->
  <input type="datetime-local" id="TimeDate-input2" name="TimeDate-input">

  <button type="submit">Submit</button>
</form>

<form id="inputVideo"  action="/main" method="GET">
  <label for="videoIdInput">Video ID:</label>
  <input type="text" id="videoIdInput" name="videoId" value="<%= videoId %>" required>
  <button type="submit">Submit</button>
</form>
  <script>
    // let HardwareInput=document.getById("Hrdware-input");
    // let EventInput=document.getElementById("Evnt-input");
    // let AreaInput=document.getElementById("Area-input");

    // let HardwareBtn=document.getElementById("Hrdware-btn");
    // let EventBtn=document.getElementById("Evnt-btn");
    // let AreaBtn=document.getElementById("Area-btn");

    let textEle = document.getElementById("text");
    let textEle2 = document.getElementById("text2");
    let fileNameEle = document.getElementById("fileName");
    let saveBtn2 = document.getElementById("saveBtn2");
    let fileNameEle2 = document.getElementById("fileName2");
    let saveBtn = document.getElementById("saveBtn");
    let fileEle = document.getElementById("myFile");
    let fileEle2 = document.getElementById("myFile2");
    const qbtn = document.getElementById('Qbtn');
    const abtn = document.getElementById('Abtn');

    const qbtn2 = document.getElementById('Qbtn2');
    const abtn2 = document.getElementById('Abtn2');
    let tagType = "";



    // // Create a heading for the form title
    // const formTitle = document.createElement('h2');
    // formTitle.textContent = 'Cranes Tracking Panel';
    // document.body.appendChild(formTitle);

    // const myForm = document.getElementById('form');
    // myForm.id = 'myForm';

    // // Create a dropdown for select location
    // const selectLocation = document.createElement('select');
    // selectLocation.id = 'selectLocation';
    // selectLocation.name = 'selectLocation';
    // selectLocation.style = 'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';
    // selectLocation.innerHTML = '<option value="______">____________</option><option value="Sanchez">Sanchez</option><option value="Massey\'s">Massey\'s</option><option value="Production Site">Production Site</option><option value="Launch Site">Launch Site</option>';

    // const selectLocationLabel = document.createElement('label');
    // selectLocationLabel.setAttribute('for', 'selectLocation');
    // selectLocationLabel.textContent = 'Select Location:';

    // myForm.appendChild(selectLocationLabel);
    // myForm.appendChild(selectLocation);

    // // Create inputs for reference, destination, payload, and time and date
    // const referenceInput = document.createElement('input');
    // referenceInput.type = 'text';
    // referenceInput.id = 'Reference-input';
    // referenceInput.name = 'Reference-input';
    // referenceInput.style = 'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';

    // const referenceLabel = document.createElement('label');
    // referenceLabel.setAttribute('for', 'Reference-input');
    // referenceLabel.textContent = 'Reference:';

    // myForm.appendChild(referenceLabel);
    // myForm.appendChild(referenceInput);

    // const destinationInput = document.createElement('input');
    // destinationInput.type = 'text';
    // destinationInput.id = 'Destination-input';
    // destinationInput.name = 'Destination-input';
    // destinationInput.style = 'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';

    // const destinationLabel = document.createElement('label');
    // destinationLabel.setAttribute('for', 'Destination-input');
    // destinationLabel.textContent = 'Destination:';

    // myForm.appendChild(destinationLabel);
    // myForm.appendChild(destinationInput);

    // const payloadInput = document.createElement('input');
    // payloadInput.type = 'text';
    // payloadInput.id = 'Payload-input';
    // payloadInput.name = 'Payload-input';
    // payloadInput.style = 'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';

    // const payloadLabel = document.createElement('label');
    // payloadLabel.setAttribute('for', 'Payload-input');
    // payloadLabel.textContent = 'Payload:';

    // myForm.appendChild(payloadLabel);
    // myForm.appendChild(payloadInput);

    // // ... your existing code ...// ... your existing code ...

    // const timeDateInput = document.createElement('input');
    // timeDateInput.type = 'text';
    // timeDateInput.id = 'TimeDate-input';
    // timeDateInput.name = 'TimeDate-input';
    // timeDateInput.style = 'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';

    // // Attach the date and time picker using flatpickr
    // flatpickr(timeDateInput, {
    //   enableTime: true, // Enable time picker
    //   dateFormat: 'Y-m-d H:i', // Format for date and time
    // });

    // const timeDateLabel = document.createElement('label');
    // timeDateLabel.setAttribute('for', 'TimeDate-input');
    // timeDateLabel.textContent = 'Time and Date:';

    // myForm.appendChild(timeDateLabel);
    // myForm.appendChild(timeDateInput);

    // // ... rest of your code ...

    // // Create submit button
    // const submitBtn = document.createElement('button');
    // submitBtn.type = 'submit';
    // submitBtn.textContent = 'Submit';
    // submitBtn.style = 'background-color: #4CAF50; color: white; padding: 10px; border: none; border-radius: 5px; cursor: pointer; transition: background-color 0.3s ease;';

    // // Insert the form title before the form
    // // document.body.insertBefore(formTitle, myForm);
    // myForm.appendChild(submitBtn);

    // const streamDeck5 = document.getElementById('stream-deck-5');
    // streamDeck5.addEventListener('click', toggleMyForm);



    // function toggleMyForm(event) {
    //   event.stopPropagation(); // Stop the event from bubbling up to parent elements

    //   if (myForm.style.display === 'none') {
    //     myForm.style.display = 'block';
    //   } else {
    //     myForm.style.display = 'none';
    //   }
    // }
    // document.body.appendChild(formTitle);

    // document.body.appendChild(myForm);



    // // Create the SPMT form
    // const spmtForm = document.createElement('form');
    // spmtForm.id = 'spmtForm';

    // // Create a dropdown for select location
    // const spmtSelectLocation = document.createElement('select');
    // spmtSelectLocation.id = 'spmtSelectLocation';
    // spmtSelectLocation.name = 'spmtSelectLocation';
    // // spmtSelectLocation.style =
    // //   'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';
    // spmtSelectLocation.innerHTML =
    //   '<option value="______">____________</option><option value="Location 1">Location 1</option><option value="Location 2">Location 2</option><option value="Location 3">Location 3</option><option value="Location 4">Location 4</option>';

    // const spmtSelectLocationLabel = document.createElement('label');
    // spmtSelectLocationLabel.setAttribute('for', 'spmtSelectLocation');
    // spmtSelectLocationLabel.textContent = 'Select Location:';

    // spmtForm.appendChild(spmtSelectLocationLabel);
    // spmtForm.appendChild(spmtSelectLocation);

    // // Create inputs for reference, destination, payload, and time and date
    // const spmtReferenceInput = document.createElement('input');
    // spmtReferenceInput.type = 'text';
    // spmtReferenceInput.id = 'spmtReference-input';
    // spmtReferenceInput.name = 'spmtReference-input';
    // // spmtReferenceInput.style =
    // //   'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';

    // const spmtReferenceLabel = document.createElement('label');
    // spmtReferenceLabel.setAttribute('for', 'spmtReference-input');
    // spmtReferenceLabel.textContent = 'Reference:';

    // spmtForm.appendChild(spmtReferenceLabel);
    // spmtForm.appendChild(spmtReferenceInput);

    // const spmtDestinationInput = document.createElement('input');
    // spmtDestinationInput.type = 'text';
    // spmtDestinationInput.id = 'spmtDestination-input';
    // spmtDestinationInput.name = 'spmtDestination-input';
    // // spmtDestinationInput.style =
    // //   'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';

    // const spmtDestinationLabel = document.createElement('label');
    // spmtDestinationLabel.setAttribute('for', 'spmtDestination-input');
    // spmtDestinationLabel.textContent = 'Destination:';

    // spmtForm.appendChild(spmtDestinationLabel);
    // spmtForm.appendChild(spmtDestinationInput);

    // const spmtPayloadInput = document.createElement('input');
    // spmtPayloadInput.type = 'text';
    // spmtPayloadInput.id = 'spmtPayload-input';
    // spmtPayloadInput.name = 'spmtPayload-input';
    // // spmtPayloadInput.style =
    // //   'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';

    // const spmtPayloadLabel = document.createElement('label');
    // spmtPayloadLabel.setAttribute('for', 'spmtPayload-input');
    // spmtPayloadLabel.textContent = 'Payload:';

    // spmtForm.appendChild(spmtPayloadLabel);
    // spmtForm.appendChild(spmtPayloadInput);

    // // ... your existing code ...

    // const spmtTimeDateInput = document.createElement('input');
    // spmtTimeDateInput.type = 'text';
    // spmtTimeDateInput.id = 'spmtTimeDate-input';
    // spmtTimeDateInput.name = 'spmtTimeDate-input';
    // // spmtTimeDateInput.style =
    // //   'width: 100%; height: 40px; margin: 10px 0; padding: 5px; border: none; border-radius: 5px; box-shadow: 0 0 5px rgba(0,0,0,0.2);';

    // // Attach the date and time picker using flatpickr
    // flatpickr(spmtTimeDateInput, {
    //   enableTime: true, // Enable time picker
    //   dateFormat: 'Y-m-d H:i', // Format for date and time
    // });

    // const spmtTimeDateLabel = document.createElement('label');
    // spmtTimeDateLabel.setAttribute('for', 'spmtTimeDate-input');
    // spmtTimeDateLabel.textContent = 'Time and Date:';


    // spmtForm.appendChild(spmtTimeDateLabel);
    // spmtForm.appendChild(spmtTimeDateInput);

    // // ... rest of your code ...

    // // Create submit button for SPMT form
    // const spmtSubmitBtn = document.createElement('button');
    // spmtSubmitBtn.type = 'submit';
    // spmtSubmitBtn.textContent = 'Submit';
    // // spmtSubmitBtn.style =
    // //   'background-color: #4CAF50; color: white; padding: 10px; border: none; border-radius: 5px; cursor: pointer; transition: background-color 0.3s ease;';

    // spmtForm.appendChild(spmtSubmitBtn);



    // const streamDeck10 = document.getElementById('stream-deck-10');
    // streamDeck10.addEventListener('click', toggleSpmtForm);



    // function toggleSpmtForm(event) {
    //   event.stopPropagation(); // Stop the event from bubbling up to parent elements

    //   if (spmtForm.style.display === 'none') {
    //     spmtForm.style.display = 'block';
    //   } else {
    //     spmtForm.style.display = 'none';
    //   }
    // }


    // // Insert the SPMT form title and submit button before the form
    // document.body.insertBefore(formTitle.cloneNode(true), myForm);
    // document.body.insertBefore(spmtForm, myForm);
    // // document.body.insertBefore(spmtSubmitBtn);
    // document.body.appendChild(spmtForm);

    function addTag(tagName, textareaID) {
      const textarea = document.getElementById(textareaID);
      const curPos = textarea.selectionStart;

      const tag = document.createElement('span');

      tag.classList.add('tag');
      tag.innerHTML = `<${tagName}>${tag.innerText}</${tagName}>`;

      // Get the text value of the tag

      tag.classList.add('tag');
      if (tagName === 'Q') {
        tag.innerText = `{{Q${qTagCount}}} `;
        qTagCount++;
      } else if (tagName === 'A') {
        tag.innerText = `{{A${aTagCount}}} `;
        aTagCount++;
      }


      // Get the text value of the tag
      const textValue = tag.textContent;
      console.log(textValue); // logs the text value of the tag

      // Insert the tag at the current cursor position
      let textBeforeCursor = textarea.value.substring(0, curPos);

      let textAfterCursor = textarea.value.substring(curPos);

      textarea.value = textBeforeCursor + textValue + textAfterCursor;



      // Update the cursor position to be after the inserted tag
      const newCurPos = curPos + tag.outerHTML.length;
      textarea.setSelectionRange(newCurPos, newCurPos);

      // Add the tag to the tag container
      const tagContainer = document.getElementById('tag-container');
      tagContainer.appendChild(tag);
    }


    qbtn.addEventListener('click', function () {

      addTag('Q', 'text');

    });

    qbtn2.addEventListener('click', function () {

      addTag('Q', 'text2');

    });

    abtn.addEventListener('click', function () {
      addTag('A', 'text');
    });

    abtn2.addEventListener('click', function () {
      addTag('A', 'text2');
    });

    let qTagCount = 1;
    let aTagCount = 1;

    let qTagCount2 = 1;
    let aTagCount2 = 1;

    document.addEventListener('selectionchange', () => {
      const selection = window.getSelection().toString();

      if (selection) {
        const range = window.getSelection().getRangeAt(0);
        const rect = range.getBoundingClientRect();
        const top = rect.top + window.pageYOffset - qbtn.offsetHeight - 5;
        const left = rect.left + window.pageXOffset + (rect.width / 2) - (qbtn.offsetWidth / 2);

        qbtn.style.top = `${top}px`;
        qbtn.style.left = `${left}px`;
        qbtn.style.display = 'block';

        abtn.style.top = `${top}px`;
        abtn.style.left = `${left + qbtn.offsetWidth + 10}px`;
        abtn.style.display = 'block';
      } else {
        qbtn.style.disply = 'none';
        abtn.style.display = 'none';
      }
    });


    const url_ngrok = "https://a13c-105-235-130-76.ngrok-free.app"
    // Connect to the Socket.IO server
    // const socket = io.connect('http://localhost:5000');
    // Your code here    
    const CONTROLLER_NAME = 'zack';
    // Connect to the server with the user's name as a query parameter
    const socket = io.connect(url_ngrok, { query: { name: CONTROLLER_NAME } });
    socket.on('connect', () => {
      console.log('Connected to server:', socket.id);
    });

    const chatArea = document.getElementById('chatArea');
    const messageInput = document.getElementById('messageInput');

    // Function to display a new message in the chat area
    function displayMessage(message) {
      const messageElement = document.createElement('p');
      messageElement.textContent = message.text; // Access the 'text' property of the message object
      chatArea.appendChild(messageElement);
      chatArea.scrollTop = chatArea.scrollHeight; // Scroll to the bottom
      console.log(message);
    }

    // Function to send a message to the server
    function sendMessage() {
      const message = messageInput.value.trim();

      if (message !== '') {
        // Emit the message to the server
        socket.emit('chat message', message);

        // Clear the message input field
        messageInput.value = '';
      }
    }

    // Handle receiving chat messages from the server
    socket.on('chat message', (message) => {
      displayMessage(message); // Display the received message
    });

    // Handle button click event
    const sendButton = document.getElementById('sendButton');
    sendButton.addEventListener('click', sendMessage);

    // Handle Enter key press event in the message input field
    messageInput.addEventListener('keydown', (event) => {
      if (event.key === 'Enter') {
        event.preventDefault(); // Prevent line break in the input field
        sendMessage(); // Send the message
      }
    });


    // Handle incoming messages from the server for textEle
    socket.on('message', (data) => {
      if (data.type === 'file') {
        // Update the contents of the textarea
        textEle.value = data.content;
      }
    });

    // Handle incoming messages from the server for textEle2
    socket.on('message', (data) => {
      if (data.type === 'file2') {
        // Update the contents of the textarea
        textEle2.value = data.content;
      }
    });
    // Handle user input in the textarea for textEle
    textEle.addEventListener('input', () => {
      const data = {
        type: 'file',
        content: textEle.value,
      };

      // Send the modified file contents to the server
      socket.emit('message', data);
    });

    // Handle user input in the textarea for textEle2
    textEle2.addEventListener('input', () => {
      const data = {
        type: 'file2',
        content: textEle2.value,
      };

      // Send the modified file contents to the server
      socket.emit('message', data);
    });

    // Handle file input for fileEle
    fileEle.addEventListener("change", () => {
      const file = fileEle.files[0];
      const reader = new FileReader();
      reader.onload = (event) => {
        const content = event.target.result;
        textEle.value = content;

        // Emit a message to the server with the file content
        const data = {
          type: 'file',
          content: content,
        };
        socket.emit('message', data);
      };
      reader.readAsText(file);
    });

    // Handle file input for fileEle2
    // Handle file input for fileEle2
    fileEle2.addEventListener("change", () => {
      const file = fileEle2.files[0];
      const reader = new FileReader();
      reader.onload = (event) => {
        const content = event.target.result;
        textEle2.value = content;

        // Emit a message to the server with the file content
        const data = {
          type: 'file2',
          content: content,
        };
        socket.emit('message', data);
      };
      reader.readAsText(file);
    });


    // Handle save button click for saveBtn
    saveBtn.addEventListener("click", (e) => {
      e.preventDefault();
      const textData = textEle.value;
      const textDataBlob = new Blob([textEle.value], { type: "text/plain" });
      const fileName = fileNameEle.value || "Transcription.txt";
      const downloadLink = document.createElement("a");
      downloadLink.download = fileName;
      downloadLink.innerHTML = "Download File";

      if (window.webkitURL != null) {
        // Chrome allows the link to be clicked without actually adding it to the DOM.
        downloadLink.href = window.webkitURL.createObjectURL(textDataBlob);
      } else {
        // Firefox requires the link to be added to the DOM before it can be clicked.
        downloadLink.href = window.URL.createObjectURL(textDataBlob);
        downloadLink.onclick = () => {
          document.body.removeChild(downloadLink);
        };
        downloadLink.style.display = "none";
        document.body.appendChild(downloadLink);
      }

      downloadLink.click();
    });


    // Handle save button click for saveBtn2
    saveBtn2.addEventListener("click", (e) => {
      e.preventDefault();
      const textData = textEle2.value;
      const textDataBlob = new Blob([textEle2.value], { type: "text/plain" });

      const fileName = fileNameEle2.value || "Summary.txt";
      const downloadLink = document.createElement("a");
      downloadLink.download = fileName;
      downloadLink.innerHTML = "Download File";

      if (window.webkitURL != null) {
        // Chrome allows the link to be clicked without actually adding it to the DOM.
        downloadLink.href = window.webkitURL.createObjectURL(textDataBlob);
      } else {
        // Firefox requires the link to be added to the DOM before it can be clicked.
        downloadLink.href = window.URL.createObjectURL(textDataBlob);
        downloadLink.onclick = () => {
          document.body.removeChild(downloadLink);
        };
        downloadLink.style.display = "none";
        document.body.appendChild(downloadLink);
      }

      downloadLink.click();
    });
    //     AreaBtn
    // HardwareBtn

    // add event listener to form submit event
    // myForm.addEventListener('submit', postEvent);
    var videoIdInput = document.getElementById('videoIdInput');
    var videoId = videoIdInput.value;

    // Load the YouTube Player API script
    var tag = document.createElement('script');
    tag.src = 'https://www.youtube.com/iframe_api';
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // Initialize the YouTube player
    var player;

    // When the YouTube API is ready, create the player
    function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', {
        height: '360',
        width: '640',
        videoId: videoId,
        origin: "https://hooks.zapier.com/hooks/catch/12018525/36qrhuk/",
        events: {
          'onReady': onPlayerReady,
          'onStateChange': onPlayerStateChange
        }
      });
    }

    // Function that gets called when the player is ready
    function onPlayerReady(event) {
      // Mute the player
      event.target.mute();

      // Add event listeners for the play and pause buttons
      var playButton = document.getElementById('play-button');
      var pauseButton = document.getElementById('pause-button');
      playButton.addEventListener('click', function () {
        console.log('play');
        player.playVideo();
      });
      pauseButton.addEventListener('click', function () {
        player.pauseVideo();
      });
    }

    // Handle player state change events and emit the state to the server using Socket.IO
    function onPlayerStateChange(event) {
      var state;
      switch (event.data) {
        case YT.PlayerState.PLAYING:
          state = 'playing';
          break;
        case YT.PlayerState.PAUSED:
          state = 'paused';
          break;
        default:
          state = 'unknown';
      }
      socket.emit('playerStateChange', { state: state });
    }// Define the formatTime function
    function formatTime(time) {
      const minutes = Math.floor(time / 60);
      const seconds = Math.floor(time % 60);
      return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
    }


    async function getSessionUsername() {
      try {
        const response = await fetch(`${url_ngrok}/api/getSessionUsername`);
        const data = await response.json();
        const username = data.username;
        console.log('Session username retrieved:', username);
        return username;
      } catch (error) {
        console.error('Error retrieving session username:', error);
        return null;
      }
    }


    // Usage example
    getSessionUsername()
      .then((username) => {
        // Use the retrieved username here
        console.log(username);
      })
      .catch((error) => {
        console.error('Error retrieving session username:', error);
      });
    // When the user submits the form
    // When the user submits the form
    // When the user submits the form// When the user submits the form
    
const cranForm = document.getElementById('form1');
cranForm.addEventListener('submit', async (e) => {
      e.preventDefault(); // prevent the default form submission behavior

      // Get the form data
      const formData = new FormData(e.target);
      const selectedLocations = formData.getAll('selectLocation1');
      const reference = formData.get('Reference-input1');
      const payload = formData.get('Payload-input1');
      const timedate = formData.get('TimeDate-input1');
      const destination = formData.get('Destination-input1');

      // Define the IDs for each selected location
      const locationIds = {
        'Launch Site': '6463c7a53891bb7657896097',
        'Production Site': '6463c7a1eea8aa72b220e2b4',
        "Massey's": '6463c7ab54ea793ebdf38087',
        'Sanchez': '6463c7b1cda50c8450a81fe8'
      };

      // Retrieve the username from the session
      try {
        const username = await getSessionUsername();
        console.log(username);

        // Emit the form data to the server for each selected location
        selectedLocations.forEach(async (selectedLocation) => {
          const id = locationIds[selectedLocation];
          socket.emit('formSubmit', { id, selectedLocation, reference, payload, username, timedate, destination });

          // Send POST requests to the three routes concurrently for each selected location
          const apiResponse = await fetch(`/api/${selectedLocation}/${videoId}/${username}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id, selectedLocation, reference, payload, username, timedate, destination })
          });

          const pipedreamResponse = await fetch('https://eo2pshurlnq4obv.m.pipedream.net', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id, selectedLocation, reference, payload, username, timedate, destination })
          });

          const cardResponse = await fetch('/api/create-card', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id, selectedLocation, reference, payload, timedate, destination })
          });


          // Wait for all three requests to complete for each selected location
          const [apiData, pipedreamData, cardData] = await Promise.all([
            apiResponse.then(res => res.json()),
            pipedreamResponse.then(res => res.json()),
            cardResponse.then(res => res.json())
          ]);

          // Handle the responses for each selected location
          createTrelloCard(cardData);
          console.log(`API Response for ${selectedLocation}:`, apiData);
          console.log(`Pipedream Response for ${selectedLocation}:`, pipedreamData);
        });
      } catch (error) {
        console.error(error);
      }

      // Clear the form fields
      cranForm.reset();
    });

    // create function getLocation fetch the endpoint
    function getLocation() {
      select.addEventListener('change', (event) => {
        const location = event.target.value;
        fetch(`/api/location/:${location}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ location })
        })
          .then(response => response.json())
          .then(data => console.log(data))
          .catch(error => console.error(error));
      });

      console.log(location, body);
    }

    const select = document.getElementById('selectLocation1'); // Replace 'selectLocation' with the actual ID of your select element

    select.addEventListener('change', (event) => {
      const location = event.target.value;
      const data = {
        location: location,
      };
      socket.emit('location', data);
      console.log(location);
    });

// Listen for disconnect events and release control if necessary
// socket.on('disconnect', function() {
//   if (isController) {
//     isController = false;
//     clientId = null;
//     controlButton.innerText = 'Take Control';
//   }
// });

  </script>
  <script>


  </script>
</body>

</html>